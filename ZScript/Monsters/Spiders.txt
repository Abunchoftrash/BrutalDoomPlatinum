Class spideronceiling : Inventory {

	Default {
		+INVENTORY.UNDROPPABLE
		+INVENTORY.UNTOSSABLE
		+inventory.autoactivate;
		inventory.maxamount 1;
	}
	
	

	
	//Items that don't spawn in the world don't need their Tick. Emptying it will actually help performace:
	Override void Tick() {}
	
	//This function is executed every tic by items while they're in an actor's inventory:
	Override void DoEffect() {
		super.DoEffect();
		if (owner.isFrozen())
			return;
		If(owner && owner.health < 1)
		{
		depleteordestroy();
		}
		if (owner) {
		

			owner.vel.z = 10;
					
		
		}
		if (owner && owner.ceilingpic == skyflatnum)
		{
		Owner.SetStateLabel ("ceilingdrop");
		depleteordestroy();
		}
		
		
		
		
	}
}


CLASS mastermindgrenade : actor
	{
	Default
		{
			+bright;
			+BOUNCEONFLOORS;
			+BOUNCEONWALLS;
			+BOUNCEONCEILINGS;
			+BOUNCEONACTORS;
			+missile;
			Gravity 0.7;
			speed 15;
			damagefunction 0;
			height 16;
			radius 16;
			bouncecount 4;
			SeeSound "DSRFIRE";
			bouncesound "QBOUNCE";
			Species "spider";
			+thruspecies;
			+mthruspecies;
			+EXPLODEONWATER;
			
		}
		
	States
		{
			Spawn: 
			BS2X AABBCCDD 1 A_spawnprojectile("GrenadeTrail3", 5, 0, random (0, 360), 2, random (-80, -160));
			LOOP;
			Death:
			TNT1 A 5 A_spawnitemex("DeadMasterGrenade");
			Stop;
		}
	}
	
	CLASS MastermindGrenadePlayer : MastermindGrenade
		{
		Default
			{
				Speed 30;
				Species "marines";
				-bounceonactors;
			
			}
		States
			{
				Xdeath:
			TNT1 A 5 A_spawnitemex("mastermindsplosionPlayer");
			Stop;
			Death:
			TNT1 A 5 A_spawnitemex("deadmastergrenadePlayer");
			Stop;
			
			}
		
		
		}
	
	Class deadmastergrenade : Actor
	{
	
		Override bool cancollidewith(Actor other, bool passive)
		{
			If(other && other is "playerpawn")
			{
				damagemobj(other,self,100,"Normal");
				return true;
			}
			Else return false;
		}
		Default
		{
			
			+shootable;
			health 40;
			gibhealth 1;
			SeeSound "none";
			+NOEXPLODEFLOOR;
			//+touchy;
			+nodamagethrust;
			+noblood;
			+NORADIUSDMG;
			-noblockmap;
			+bright;
			+solid;
			Species "spider";
			height 16;
			radius 16;
			+thruspecies;
			+mthruspecies;
		}
		States
		{
		Spawn:
		TNT1 A 0 A_jump(256,"spawn1","spawn2","spawn3","spawn4");
		LOOP;
		Spawn1:
		BS2X A 0;
		Goto stay;
		Spawn2:
		BS2X B 0;
		Goto stay;
		Spawn3:
		BS2X C 0;
		Goto stay;
		Spawn4:
		BS2X D 0;
		Goto stay;
		Stay:
		BS2X "#" 1 A_spawnprojectile("GrenadeTrail3", 5, 0, random (0, 360), 2, random (-80, -160));//A_spawnitemex("grenadetrail",0,0,5,frandom(-3,3),frandom(-3,3),frandom(3,10),frandom(0,360));
		LOOP;
		Death:
			TNT1 A 5 A_spawnitemex("mastermindsplosion");
			Stop;
		}
		
	}
	
	Class Deadmastergrenadeplayer : deadmastergrenade
		{
		Override bool cancollidewith(Actor other, bool passive)
		{
			If(other && other is "playerpawn")
			{
				return false;
			}
			Else 
			{
				damagemobj(other,self,100,"Normal");
				return true;
			}
		}
		Default
			{
				Species "marines";
				+thruspecies;
				+mthruspecies;
			
			}
		States
			{
			
				Death:
			TNT1 A 5 A_spawnitemex("mastermindsplosionplayer");
			Stop;
			}
		
		}
	
	
	class mastermindsplosion : actor
{
Default
{
+MISSILE;
Radius 2;
Height 2;
deathsound "explosion";
Damagetype "ExplosiveImpact";
}
States    {
    Spawn:
	Goto Death;
	Death:
	TNT1 A 0;
	TNT1 A 0 A_SpawnItemEx ("ExplosionSplashSpawner", 0, 0, -20);
		TNT1 A 0 A_SpawnItemEx ("DetectFloorCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	    TNT1 A 0 A_SpawnItemEx ("DetectCeilCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	    TNT1 A 0 A_SpawnItemEx ("UnderwaterExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		
        TNT1 AAAAAAAAAA 0 A_spawnprojectile ("BDExplosionparticlesBig", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAA 0 A_spawnprojectile ("BDExplosionparticles2", 0, 0, random (0, 360), 2, random (0, 90));
		TNT1 AAAA 0 A_spawnprojectile ("SmallExplosionFlames", 0, 0, random (0, 360), 2, random (0, 360));
	    EXPL A 0 Radius_Quake (2, 24, 0, 15, 0);
	//TNT1 A 0 A_SpawnItemEX("WhiteShockwave");
	//TNT1 A 0 A_startsound("Explosion",4);
	TNT1 A 3;
	TNT1 A 0 A_scream();
	TNT1 A 0 A_Explode(60,220);
	//TNT1 A 0 A_startsound("Explosion",4);
	TNT1 A 100;
        Stop;
		}}
class mastermindsplosionplayer : mastermindsplosion
	{
		States    {
    Spawn:
	Goto Death;
	Death:
	TNT1 A 0;
	TNT1 A 0 A_SpawnItemEx ("ExplosionSplashSpawner", 0, 0, -20);
		TNT1 A 0 A_SpawnItemEx ("DetectFloorCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	    TNT1 A 0 A_SpawnItemEx ("DetectCeilCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	    TNT1 A 0 A_SpawnItemEx ("UnderwaterExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
		
        TNT1 AAAAAAAAAA 0 A_spawnprojectile ("BDExplosionparticlesBig", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAA 0 A_spawnprojectile ("BDExplosionparticles2", 0, 0, random (0, 360), 2, random (0, 90));
		TNT1 AAAA 0 A_spawnprojectile ("SmallExplosionFlames", 0, 0, random (0, 360), 2, random (0, 360));
	    EXPL A 0 Radius_Quake (2, 24, 0, 15, 0);
	//TNT1 A 0 A_SpawnItemEX("WhiteShockwave");
	//TNT1 A 0 A_startsound("Explosion",4);
	TNT1 A 3;
	TNT1 A 0 A_scream();
	TNT1 A 0 A_Explode(220,220);
	//TNT1 A 0 A_startsound("Explosion",4);
	TNT1 A 100;
        Stop;
		}
	}