

	CLASS BaseArchvile : archvile
	{
	
	
		Override void tick()
		{
			
			If(getcvar("bd_archvileteleport") == 0 && !findinventory("imteleporting"))
				{
				
				
				painchance = random(70,140);
				bnopain = false;
				
				}
			Else
			{
			//console.printf("Homosexual");
			painchance = 10;
			}
			Super.tick();
		}
		
		Action state a_vilechecktarget()
		{
			bool cantseeplayer;
			If(random(1,70) > 50)
				{
					If(target && !checksight(target))
					{
						cantseeplayer = true;
						
					}
				}
			If(!cantseeplayer) 
			{
				return resolvestate(null);
			}
			Else
			{
				return resolvestate("teleportawaysee");
			}
		}
		
		Action state a_viletryteleport(statelabel TeleportState = "doteleport")
		{
			Int teleportcount;
			bool teleportsuccess;
			Actor viletarget;
			while(!teleportsuccess && teleportcount < 30)
			{
			FLineTraceData lasersight;
				LineTrace(frandom(0,365), 1000, frandom(0,365), TRF_THRUACTORS | TRF_BLOCKSELF, offsetz: 64, data: lasersight);
				vector3 targetpos = lasersight.HitLocation;
				if (lasersight.HitLine)
				{
					vector2 wallnormal = (-lasersight.HitLine.delta.y,lasersight.HitLine.delta.x).unit();
					if (!lasersight.LineSide)
					wallnormal *= -1;
					targetpos += (wallnormal * 18);
				}
				if (lasersight.hittype == trace_hitceiling)
				{
					targetpos.z -= 13;
				}
				VileTarget = Spawn("Viletarget",targetpos);
				
					If(viletarget && distance2d(viletarget) > 300)
					{
						teleportsuccess = true;
						//console.printf("teleportsuccessful");
						tracer = viletarget;
						viletarget.tracer = self;
					}
					Else
					{
						If(viletarget)
						viletarget.destroy();
						//console.printf("TeleportFailed");
						teleportcount++;
					}
				}
				If(tracer && tracer is "viletarget" && teleportsuccess)
				{
					Return resolvestate(teleportstate);
				}
				Else
				{
					Return resolvestate(null);
				}
		
		}
	
		Action state a_vileteleport(statelabel teleportback = "teleportback")
		{
			//A_wander();
			
			A_spawnitemex("randomTinyBurningPiece");
			A_checkforresurrection(resolvestate("stayteleported"));
			A_facetracer();
			vector3 movepos = Vec3Angle(34,angle,0);
			If (checkmove(Vec2Angle(34,angle),PCM_NOACTORS))
			{
				setorigin(movepos,TRUE);
			}
			Else if(!checkblock())
			{
				if(tracer)
				tracer.Destroy();
				Return resolvestate(teleportback);
				
			}
			If(tracer && distance2d(tracer) <= 32 && !checkblock())
			{
				if(tracer)
				tracer.Destroy();
				Return resolvestate(teleportback);
			}
			
			Return resolvestate(null);
			
		}
		
		Action void a_vileteleport2()
		{
			//A_wander();
			angle = frandom(0,360);
			A_spawnitemex("randomTinyBurningPiece");
			A_recoil(-6);
			
		}
	
	}
	
	
	CLASS ArchvileFirewall : actor
	{
		Default
		{
		+Shootable;
		Health 105;
		Radius 32;
		Height 72;
		Damagefactor "Railgun", 0.3;
		Scale 0.3;
		Renderstyle "add";
		+noblood;
		+nogravity;
		+dontthrust;
		//+solid;
		Species "archviles";
		+thruspecies;
		+dontrip;
		+stoprails;
		DamageFactor "Freeze",3.0;
		DamageFactor "Ice",3.0;
		DamageFactor "Frost",3.0;
		}
		
		
		States
		{
			Spawn:
				TNT1 ABABABABABABABABABABABABABABABABABABABABABABABABBABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABA 1 BRIGHT NODELAY
				{
					A_spawnprojectile("FlameTrailsLonger", 0, 0, random (0, 360), 2, random (-70, -120));
				}
			Death:
					TNT1 AA 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	TNT1 A 0 A_spawnprojectile ("BDExplosionparticles", 0, 0, random (0, 360), 2, random (-40, -90));
	TNT1 A 0 A_spawnprojectile ("BDExplosionparticles2", 0, 0, random (0, 360), 2, random (-40, -90));
	TNT1 A 0 A_spawnprojectile ("BDExplosionparticles3", 10, 0, random (0, 360), 2, random (-40, -90));
	EXPL A 0 A_spawnprojectile ("FlamethrowerFireParticles", 6, 0, random (0, 360), 2, random (0, -90));
	//FRFX ZZZ 0 BRIGHT A_spawnprojectile ("BigBlackSmoke", 2, 0, random (0, 360), 2, random (0, 30))
	//TNT1 A 2 A_SpawnItem("BurningGroundLowDamage")
	TNT1 A 0 A_SpawnItemEx("TinyBurningPiece", random (-15, 15), random (-15, 15));
	TNT1 A 0 A_SpawnItemEx("TinyBurningPiece2", random (-35, 35), random (-35, 35));
	TNT1 A 0 A_SpawnItemEx("TinyBurningPiece3", random (-45, 45), random (-45, 35));
	TNT1 AA 20 A_spawnprojectile ("BigBlackSmoke", 0, 0, random (0, 360), 2, random (-40, -160));
	Stop;
		}
	
	
	}
	
	CLASS VileTarget : ACTOR
{ 
	Default
	{
		Decal "None";
		Mass 1;
		Radius 1;
		Height 2;
		gravity 500.0;
		+NOBLOCKMAP;
		+BLOODLESSIMPACT;
		+ALWAYSPUFF;
		+PUFFONACTORS;
		+DONTSPLASH;
		+FORCEXYBILLBOARD;
	}
	
	Override void tick()
	{
		
		If ( tracer && tracer.tracer != self )
		{
			Destroy();
		}
		Super.tick();
	}
	
    States
    {
	Spawn:
		TNT1 A 1;
		LOOP;
	}
}