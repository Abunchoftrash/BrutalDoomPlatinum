CLASS BattleRifleAmmo : Ammo
{
	Default
	{
   Inventory.Amount 0;
   Inventory.MaxAmount 12;
   Ammo.BackpackAmount 0;
   Ammo.BackpackMaxAmount 12;
   Inventory.Icon "BR45A0";
   }
}

CLASS BattleRifle : Brutalweapon
{
	Default
	
	{
	Weapon.AmmoUse1 0;
	Weapon.AmmoUse2 0;
	Weapon.AmmoGive1 50;
	Weapon.AmmoGive2 0;
	Weapon.AmmoType1 "Clip2";
	Weapon.AmmoType2 "BattleRifleAmmo";
	Obituary "%o was pierced by %k's Railgun.";
    Inventory.PickupSound "RAILINSR";
	Inventory.Pickupmessage "You got the Battle Rifle! (Slot 4)";
	+WEAPON.NOAUTOAIM;
	+WEAPON.NOALERT;
	+WEAPON.EXPLOSIVE;
	+FORCEXYBILLBOARD;
	scale 0.8;
	radius 24;
	height 24;
	damagetype "Revolver";
	Weapon.SelectionOrder 1550;
	Inventory.AltHUDIcon "SRCGA0";
	BrutalWeapon.weight 2;


	}
	int reloadchannel;
	bool altzoom;
	
	Action void a_spawnhologram()
	{
		A_radiusgive("KillHologram",10000,RGF_MONSTERS | RGF_NOSIGHT,1,"HoloPlayer");
		FLineTraceData lasersight;
				LineTrace(angle, 4096, pitch, TRF_SOLIDACTORS|TRF_THRUHITSCAN, offsetz: player.viewz - pos.z, data: lasersight);
				vector3 targetpos = lasersight.HitLocation;
				if (lasersight.HitLine)
				{
					vector2 wallnormal = (-lasersight.HitLine.delta.y,lasersight.HitLine.delta.x).unit();
					if (!lasersight.LineSide)
					wallnormal *= -1;
					targetpos += (wallnormal * 18);
				}
				if (lasersight.hittype == trace_hitceiling)
				{
					targetpos.z -= 13;
				}
				Let HoloTarget = Spawn("Holotarget",targetpos);
				Let HoloPlayer = Spawn("Holoplayer",pos);
				If(HoloTarget && HoloPlayer)
				{
					HoloPlayer.angle = angle;
					HoloPlayer.Tracer = Holotarget;
					HoloPlayer.Translation = Invoker.owner.Translation;
				}
				
		
	}
	
	Action void a_firenurailgun()
	{
		FLineTraceData railspawn;
				LineTrace(angle, 4096, pitch, TRF_NOSKY | TRF_THRUACTORS, player.viewz - pos.z, data: railspawn);
				if (railspawn.HitType != TRACE_HitNone)
				{
				vector3 targetpos = railspawn.HitLocation;
			if (railspawn.HitLine)
				{
					vector2 wallnormal = (-railspawn.HitLine.delta.y,railspawn.HitLine.delta.x).unit();
					if (!railspawn.LineSide)
					wallnormal *= -1;
					targetpos += (wallnormal * 3);
				}
					actor beam = Spawn("railgunrail", targetpos);
          
					if (beam)
					{
						beam.angle = angle;
						beam.pitch = pitch;
					}
				}
				If(!findinventory("PowerSPeed2"))
				{
				A_giveinventory("railchambered",1);
				}
				A_Fireprojectile("RailgunProjectile", 0, 0, 0, 0);
				A_alertmonstersDX(500);
				A_RailAttack(450, 0, 0, "Blue", "Blue", RGF_FULLBRIGHT, 1, "RailgunPuff2",0,0,0,0,1.2,2,"BluePlasmaParticleWeaponRailgun",0,360);
				//A_RailAttack(400, 0, 0, "Orange", "Red", RGF_FULLBRIGHT, 1, "RailgunPuff2",0,0,0,0,0.5,2,"none",0,270);
				A_Fireprojectile ("PlasmaSmoke", 0, 0, 0, 2);
				A_StartSound("RAILF01", 1);
				A_takeAmmo("nurailgunammo",1);
				A_setpitch(pitch - 6);
	
	}
	States
	{
	
		GrenadeThrowFlash:
			BR4S ABCDE 1;
			TNT1 A 22;
			BR4S EDCBA 1;//32 in total
			stop;
			
		FuckYouFlash:
			BR4K ABCDEEEEEEEEEEEEEEEEEEEEEEDCBA 1; //18
			stop;
			
		KickingFlash:
			BR4K ABCDEEEEEEEEEEDCBA 1;
			Goto Ready;
		AirKickingFlash:
			BR4K ABCDEEEEEEEEEEDCBA 1; //18
			Goto Ready;
	
		SlideKickingStart:
			BR4K ABCDE 1;
			BR4K EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 1 { //39 total
				if (CountInv("Kicking") == 0) {
					return resolvestate("SlideKickingEnd");
				}
				return resolvestate(null);
			}
			Goto Ready;

		SlideKickingEnd:
			BR4K EEEEEEDCBA 1; //10
			Goto Ready;
			
		SprintOverlay:
			BR4K ABCD 1;
			KeepSprinting:
			BR4K E 1 A_weaponreadyDX(WRF_ALLOWRELOAD,FALSE,FALSE);
			"####" A 0 A_keepsprinting();
			Goto ReturnFromSprint;
			

	
		ReturnfromSprint:
			BR4K DCBA 1 A_weaponreadyDX(WRF_ALLOWRELOAD,FALSE,FALSE);
			Goto ready;
	
		Select:
			TNT1 A 0;
			NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
			Goto SelectFirstPersonLegs;
		SelectContinue: "####" A 0 A_GiveInventory("IsPlayingDoxMod",1); 
			UNHG A 0 A_takeinventory("disabletilting",1);
			TNT1 AAAAAAAAAAAAAA 0 A_Raise();
			TNT1 A 1 A_Raise();
			TNT1 A 0 A_Giveinventory("RailgunSelected",1);
			RIFL C 0 A_GunSlingerReload("nurailgunammo",5,"ammocell",10);
		ReturnFromNothing:
			TNT1 A 0 A_startSound("RAILINSR",1);
			TNT1 AAA 0;
		
			Goto SelectAnimation;
		
		SelectAnimation:
			NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
			BR4S EDCBA 1 A_WeaponReady(WRF_NOFIRE);
			GOto Ready;
			Deselect: 
				"####" A 0 A_TakeInventory("IsPlayingDoxMod",1);
				"####" A 0 A_ClearOverlays(-2,-2);
				BR4S ABCDE 1;
				TNT1 A 0 A_StopSOund(1);
				TNT1 A 0 A_StopSOund(2);
				TNT1 A 0 A_StopSOund(6);
				TNT1 A 0 A_TakeInventory("TossGrenade", 1);
				TNT1 AAAAAAAAAAAAAAAA 0 A_lower();
				TNT1 A 1 A_Lower();
				Wait;
		Ready:
			BR45 B 1 A_weaponreadyDX(WRF_ALLOWRELOAD);
			LOOP;

		Fidget:
			TNT1 A 0 A_overlay(-5,"pumpinghandlol");
			RAIL FGHI 1;
			
			RAIL JKLMNYYOO 1 A_WeaponReadyDX();
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2");
			RAIL OOOO 1 A_WeaponReadyDX();
			TNT1 A 0 A_StartSound("RAILMAG2", 5);
			RAIL PR 1 A_WeaponReadyDX();
			RAIL TWWVUUUUUUUUU/*UUUUUUUUUU*/ 1 A_WeaponReadyDX();
			TNT1 A 0 A_StartSound("RAILINSR", 5);
			RAIL UUUUUTTSRQP 1 A_WeaponReadyDX();
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2reverse");
			RAIL OOOOONMLKJ 1 A_WeaponReadyDX();
			TNT1 A 0 A_overlay(-5,"pumpinghandlolreverse");
			RAIL IHGF 1 A_WeaponReadyDX();
			Goto ready;

		Fire:
			TNT1 A 0 A_CheckIfAmmo("battlerifleammo");
			TNT1 A 0 A_semiflag();
			RAIL A 0 
			{
				A_overlay(-5,"DoNothing");
				A_zoomfactor(0.7);
				A_fireprojectile("shotgunparticles2",random(12,-12),false,0,0,0,random(9,-9));
				A_FireBullets (0, 0, -1, 50, "BR45BulletPuff", FBF_NORANDOM,8192,"decorativetracer",-12);
				A_startsound("BR45FIRE",1);
				A_ALertMonstersDX();
				A_takeammo("battlerifleammo",1);
			}
			TNT1 A 0 A_GunLight();
			BR45 C 1;
			TNT1 A 0 
			{
				A_zoomfactor(1.0);
				A_fireprojectile("riflecasespawnversion2",5,false,0,-14,0);
				If(countinv("battlerifleammo") < 1)
				{
					A_fireprojectile("RifleClipSpawn",5,false,0,-14,0);
				}
			}
			BR45 DDEFGH 1;
			BR45 B 3;
			
			TNT1 A 0 A_Semirefire("Fire","SemiAutoLul");
			TNT1 A 0 A_CheckIfAmmo("BattleRifleAmmo",1,"reload");
			
			Goto Ready;
			
			SemiAutoLul:
			BR45 B 1;
			TNT1 A 0 A_Semirefire("Fire","SemiAutoLul");
			Goto Ready;
		
		
		Reload:
			TNT1 A 0
			{
				invoker.semiautofired = false;
			}
			TNT1 A 0 A_takeinventory("reloading",1);
			TNT1 A 0 A_CheckIfAmmo("clip2",1,"noammo");
			TNT1 A 0 A_jumpifinventory("battlerifleammo",12,"ready");
			
			BR4R ABCDE 1;
			TNT1 A 0
			{
			If(countinv("battlerifleammo") > 0)
				{
					A_fireprojectile("RifleClipSpawn",5,false,0,-14,0);
				}
			}
			BR4R FGGGGGGHIJKLMNOP 1;
			TNT1 A 0 
			{
				A_startsound("BR45LOAD",3);
				A_reload("battlerifleammo", 12, "clip2");
			}
			BR4R QRSTUVWX 1;
			Goto Ready;
		
			
		NoAmmo:
			TNT1 A 0 A_StartSound("weapons/empty", 3);
		NoAmmo2:

		BR45 B 1;
		PISZ A 0 A_Refire("NoAmmo2");
		TNT1 A 0 A_CheckIfAmmo("clip2",1,"ready");
		Goto reload;
			
		AltFire:
	//	RLNG A 0 ACS_NamedExecuteAlways("HoldAim");
		//RLNG A 0 A_JumpIfInventory("Zoomed",1,"NoAim");
		//RLNG A 0 A_Giveinventory("Zoomed",1)
        
		
		RLNG A 0 
		{
			A_overlay(-5,"DoNothing");
			A_ZoomFactor(3.0);
			A_SetCrosshair(41);
			invoker.altzoom = false;
		}
		BR4Z ABCD 1;
		SMGG A 0 A_StartSound("ADSIN");
	AltFireContinue:
		
		StillAiming:
		//TNT1 A 0 A_jumpifinventory("firedsecondary",1,"Aim1");
		TNT1 A 0 A_WeaponZoom();
		Goto Aim2;
		Aim1:
			TNT1 A 0;
			SMGG A 0 A_ZoomFactor(3.0);
			BR4Z D 1 BRIGHT A_weaponready(WRF_NOSECONDARY | WRF_NOPRIMARY);
			TNT1 A 0 A_jumpifinventory("reloading",1,"zoomedreload");
			TNT1 A 0 A_jumpifinventory("firedprimary",1,"ZoomedFire");
			TNT1 A 0 A_jumpifinventory("firedsecondary",1,"Aim1");
			Goto noaim;
		Aim2:
			TNT1 A 0 
			{
			/*
				If(countinv("startdualwield") > 0)
				{
					Takeinventory("startdualwield",1);
					
					If(countinv("raillightscope") > 0)
					{
						A_takeinventory("raillightscope",1);
						a_startsound("bepbep",2);
					}
					Else
					{
						A_giveinventory("raillightscope",1);
						a_startsound("bep",2);
					}
				}
				If(countinv("raillightscope") > 0)
				{
					A_giveinventory("powerlightampc",1);
				}
				Else
				{
					A_takeinventory("powerlightampc",1);
				}
				*/
				
			}
			TNT1 A 0 A_jumpif(invoker.altzoom,"Aim3");
			//SMGG A 0 A_ZoomFactor(3.0);
			BR4Z D 1 BRIGHT A_weaponready(WRF_NOSECONDARY | WRF_NOPRIMARY);
			TNT1 A 0 A_jumpifinventory("reloading",1,"zoomedreload");
			TNT1 A 0 A_jumpifinventory("firedprimary",1,"ZoomedFire");
			TNT1 A 0 A_jumpifinventory("firedsecondary",1,"GoingToAim3");
			LOOP;
	GoingToAim3:
	TNT1 A 0 {invoker.altzoom = true;}
	TNT1 A 0 A_zoomfactor(9.0);
	BR4Z D 5 BRIGHT;
	Aim3:
			TNT1 A 0 
			{
				If(countinv("startdualwield") > 0)
				{
					Takeinventory("startdualwield",1);
					
					If(countinv("raillightscope") > 0)
					{
						A_takeinventory("raillightscope",1);
						a_startsound("bepbep",2);
					}
					Else
					{
						A_giveinventory("raillightscope",1);
						a_startsound("bep",2);
					}
				}
				If(countinv("raillightscope") > 0)
				{
					A_giveinventory("powerlightampc",1);
				}
				Else
				{
					A_takeinventory("powerlightampc",1);
				}
				//a_startsound("bepbep",2);
			}
			SMGG A 0 A_ZoomFactor(9.0);
			BR4Z D 1 BRIGHT A_weaponready(WRF_NOSECONDARY | WRF_NOPRIMARY);
			TNT1 A 0 A_jumpifinventory("reloading",1,"zoomedreload");
			TNT1 A 0 A_jumpifinventory("firedprimary",1,"ZoomedFire");
			TNT1 A 0 A_jumpifinventory("firedsecondary",1,"NoAim");
			LOOP;
	ZoomedFire:
		TNT1 A 0 A_CheckIfAmmo("BattleRifleAmmo",1,"NoAmmoZoomed");
		TNT1 A 0 A_semiflag();
			RAIL A 0 
			{
				A_overlay(-5,"DoNothing");
				//A_zoomfactor(0.7);
				A_fireprojectile("shotgunparticles2",random(12,-12),false,0,0,0,random(9,-9));
				A_FireBullets (0, 0, -1, 50, "BR45BulletPuff", FBF_NORANDOM,8192,"decorativetracer",-12);
				A_startsound("BR45FIRE",1);
				A_setpitch(pitch - 3);
				A_ALertMonstersDX();
				A_takeammo("battlerifleammo",1);
			}
			TNT1 A 0 A_GunLight();
			BR4Z D 1 BRIGHT A_setpitch(pitch + 1);
			TNT1 A 0 
			{
				//A_zoomfactor(1.0);
				A_fireprojectile("riflecasespawnversion2",5,false,15,-7,0);
				If(countinv("battlerifleammo") < 1)
				{
					A_fireprojectile("RifleClipSpawn",5,false,15,-7,0);
				}
			}
			BR4Z DD 1 BRIGHT A_setpitch(pitch + 1);
			BR4Z D 7 BRIGHT;
			
			TNT1 A 0 A_Semirefire("ZoomedFire","SemiAutoLulZoomed");
			TNT1 A 0 A_CheckIfAmmo("BattleRifleAmmo",1,"zoomedreload");
			
			TNT1 A 0 A_WeaponZoom2();
			Goto StillAiming;
			
			SemiAutoLulZoomed:
			BR4Z D 1;
			TNT1 A 0 A_Semirefire("ZoomedFire","SemiAutoLulZoomed");
			TNT1 A 0 A_CheckIfAmmo("BattleRifleAmmo",1,"zoomedreload");
			
			TNT1 A 0 A_WeaponZoom2();
			Goto StillAiming;
			
		TNT1 A 0 A_WeaponZoom2();
		Goto StillAiming;
		
		/*
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("PowerLightAmp", 1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_StartSound("ADSOUT");
        RAIZ FE 1;
		NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		RAIZ DCBA 1;
		Goto Pumping;
		*/
	NoAmmoZoomed:
			TNT1 A 0
			{
				If(countinv("battlerifleammo") < 1 && Countinv("clip2") > 0)
					{
						Return resolvestate("NoAmmoZoomed2");
					}
				Else
					{
						Return resolvestate(null);
					}
			}
			TNT1 A 0
			{
				A_startsound("weapons/empty",4);
			}
			BR4Z D 1 BRIGHT;
			TNT1 A 0 A_WeaponZoom2();
		Goto StillAiming;
	Noammozoomed2:	
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("PowerLightAmp", 1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_StartSound("ADSOUT");
		NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		BR4Z CBA 1;	
        Goto Reload;
		
	ZoomedReload:	
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("PowerLightAmp", 1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_StartSound("ADSOUT");
		NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		BR4Z CBA 1;	
        Goto Reload;
		
	NoAim:	
	    RLNG A 0 A_Light0();
		RLNG A 0 A_Takeinventory("PowerLightAmp", 1);
		RLNG A 0 A_Takeinventory("PowerLightAmpc", 1);
        RLNG A 0 A_ZoomFactor(1.0);
	   // NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RLCrosshair"));}else{A_SetCrosshair(0);}}
		SMGG A 0 A_StartSound("ADSOUT");
		NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
		BR4Z CBA 1;	
        Goto Ready;
		
		
	
			
		DualWield:
			TNT1 A 0 A_takeinventory("startdualwield",1);
			RAIL A 4;
			TNT1 A 0 A_jumpifinventory("holdingdual",1,"SlowHologram");
			TNT1 A 0
			{
				A_startsound("bepbep",4);
				A_SpawnHologram();
			}
			Goto Ready;
		SlowHologram:
			TNT1 A 0 A_startsound("PISTFOL5",10);
			RAIZ ABCD 1;
			TNT1 A 0 
			{
			A_startsound("BEP",4);
			A_setcrosshair(41);
			}
		HoldHologram:
			RAIZ D 1
			{
				FLineTraceData lasersight;
				LineTrace(angle, 4096, pitch, TRF_SOLIDACTORS|TRF_THRUHITSCAN, offsetz: player.viewz - pos.z, data: lasersight);
				vector3 targetpos = lasersight.HitLocation;
				if (lasersight.HitLine)
				{
					vector2 wallnormal = (-lasersight.HitLine.delta.y,lasersight.HitLine.delta.x).unit();
					if (!lasersight.LineSide)
					wallnormal *= -1;
					targetpos += (wallnormal * 18);
				}
				if (lasersight.hittype == trace_hitceiling)
				{
					targetpos.z -= 13;
				}
				
				if (lasersight.hittype == trace_hitfloor)
				{
					targetpos.z += 13;
				}
				Spawn("HoloLaser",targetpos);
			
			}
			TNT1 A 0 A_jumpifinventory("holdingdual",1,"HoldHologram");
			TNT1 A 0
			{
				A_startsound("bepbep",4);
				A_SpawnHologram();
				A_startsound("PISTFOL5",10);
				{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("RailgunCrosshair"));}else{A_SetCrosshair(0);}}
			}
			RAIZ DCBA 1;
			TNT1 A 0 A_takeinventory("startdualwield",1);
			Goto Ready;
			
		Spawn:
			BR45 A -1;
			LOOP;

		Unload:
			RAIL A 1 A_WeaponReady();
			RAIL A 0 A_ZoomFactor(1.0);
			RAIL A 0 A_Takeinventory("Unloading",1);
			RAIL A 0 A_Takeinventory("ADSmode",1);
			RAIL A 0 A_Takeinventory("Zoomed",1);
			RAIL A 0 A_JumpIfInventory("NuRailgunAmmo",1,1);
			Goto Ready;
		RemoveBullets:
			TNT1 A 0 A_overlay(-5,"pumpinghandlol");
			RAIL FGHI 1;
			
			RAIL JKLMNYYOO 1;
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2");
			RAIL OOOO 1;
			RAIL A 0 A_JumpIfInventory("NuRailgunAmmo",1,1);
			Goto FinishUnload;
			TNT1 A 0 A_StartSound("RAILMAG2", 5);
			RAIL PR 1;
			RAIL TWWV 1;
			RAIL A 0 A_Takeinventory("NuRailgunAmmo",1);
			RAIL A 0 A_Giveinventory("AmmoCell",10);
			RAIL UUUUUUUUU/*UUUUUUUUUU*/ 1;
			TNT1 A 0 A_StartSound("RAILINSR", 5);
			RAIL UUUUUTTSRQP 1;
			Goto RemoveBullets+19;
		FinishUnload:
			TNT1 A 0 A_overlay(-5,"pumpinghandlol2reverse");
			RAIL OOOOONMLKJ 1;
			TNT1 A 0 A_overlay(-5,"pumpinghandlolreverse");
			RAIL IHGF 1;
			Goto Ready;
	}
	
}