





CLASS FreezeNade : actor
{
	Default
	{
    Radius 4;
	Height 4;
	Speed 30;


  //  +BLOODSPLATTER
    Gravity 0.7;
	Damagefunction 0;
	+MISSILE;
	+FORCEXYBILLBOARD;
	+rollsprite;
	+ROLLCENTER;
	Scale 0.2;
	//+bloodlessimpact;
	//+BLOODSPLATTER;
	//+ripper;
	Obituary "%o was stuck by a freeze grenade";
	//SeeSound "weapons/chainsaw/loop"
	//+ripper
	+hittracer;
	+explodeonwater;
	+usebouncestate;
	+skyexplode;
	+bounceonwalls;
+bounceonfloors;
+bounceonceilings;
bouncecount 5;
-explodeonwater;
+canbouncewater;
	}
	

		
	
    Vector3 stickOfs;
    double stickAngle;
	
	int sawtimer;
	bool hasexploded;
	bool stuck;
	bool ihitsomething;
	
	Override void tick()
	{
	Super.tick();
	A_spawnprojectile("GrenadeTrail", 10, 0, random (0, 360), 2, random (-80, -160));
	If(Ihitsomething)
		{
		sawtimer = (sawtimer + 1);
		If(sawtimer == 1)
		{
		A_startsound("StickyGrenade/Stick",8);
		}
		If(sawtimer == 30)
		{
		A_startsound("StickyGrenade/Detonate",5);
		}
		If(sawtimer > 60 && !hasexploded)
		{
		hasexploded = true;
		Setstatelabel("ExplodeTime");
		If(tracer && tracer.health < 200)
		{
		//tracer.bfriendly = false;
		//tracer.bcountkill = true;
		}
		}
	}
	
	}
	
	/*
	Override int SpecialMissileHit(Actor victim) 
		{

			if (victim && victim.bshootable && victim.health > 0 && !victim.binvulnerable && !stuck)
			{	
				stuck = true;
				tracer = victim;
				If(!victim.findinventory("isplayer"))
				{
				victim.a_pain();
				}
				stickOfs = victim.Vec3To(self);
                    stickAngle = tracer.angle;
					/*
								If(tracer.health < 200 && !tracer.findinventory("melee_attacks"))
			{
			tracer.bfrightened = TRUE;
			//tracer.bfrightening = true;
			//tracer.bfriendly = true;
			tracer.speed = (tracer.speed * 1.5);
			tracer.reactiontime = 99999;
			}
			
				
			
			}
			Else if(victim && !stuck)
			{
			setstatelabel("fall");
			}
			Return -1;
		}
		*/
	Override void beginplay()
		{
		//tracer = null;
		super.beginplay();
		//savedangle = angle;
		}
	
	
	States
	{
	Spawn:
		GRND BBBBBBBB 2
		{
		//savedheight = floorz;
		tracer = null;
		 A_SetRoll(roll+45);
		}
		Loop;
		
		
		

		Xdeath:
		TNT1 A 0;
		//TNT1 A 0 A_startsound("StickyGrenade/Hit");
		TNT1 A 0 
		{
		ihitsomething = true;
		stuck = true;
		//tracer = victim;
			If(tracer)
			{
				tracer.a_pain();
				stickOfs = tracer.Vec3To(self);
                    stickAngle = tracer.angle;
		busebouncestate = false;
		}
		If(!tracer)
		{
		setstatelabel("fall");
		}
		}
		Stuck:
		GRND B 1 
		{
		
		If(!tracer || tracer.health < 1)
		{
		setstatelabel("fall");
		}


			If(tracer && tracer.health > 0)
			{
			/*
			If(tracer.health < 200 && !tracer.findinventory("melee_attacks"))
			{
			//tracer.angle = (tracer.angle + frandom(-40,40));
		//	tracer.a_stop();
		//	tracer.a_recoil(-7);
			tracer.reactiontime = 10;
			}
			*/
			
				double angDiff = DeltaAngle(stickAngle, tracer.angle);
					if (angDiff)
					{
						stickOfs.xy = RotateVector(stickOfs.xy, angDiff);
						angle += angDiff;
					}

				SetOrigin(tracer.Vec3Offset(stickOfs.x, stickOfs.y, stickOfs.z), true);
				stickAngle = tracer.angle;
				//tracer.a_stop();
			
				//Warp(tracer,calculatingpos.x,calculatingpos.y,calculatedpos.z,savedangle,WARPF_NOCHECKPOSITION | WARPF_ABSOLUTEANGLE | WARPF_INTERPOLATE | WARPF_TOFLOOR);
				//angle = savedangle;
			}
		
			
		}
		LOOP;
		
		death:
		TNT1 A 0 
		{
		ihitsomething = true;
		//A_startsound("StickyGrenade/Hit");
		tracer = null;
		}
		TNT1 A 0 A_checkceiling("deathceiling");
		TNT1 A 0
		{
		busebouncestate = false;
		bnogravity = true;
		}
		StayDead:
		GRND B 1;
		LOOP;
		

		
		Deathceiling:
		TNT1 A 0
		{
		bnogravity = true;
		vel.z = 6;
		}
		
		Goto staydead;
		
	
	ExplodeTime:
	TNT1 A 0
	{
	busebouncestate = false;
	If(tracer && stuck)
	{
	A_damagetracer(frandom(120,200),"Ice");
	}
		
		If(pos.Z <= floorz)
		{
		
			A_SpawnItemEx ("IceShardsSpawner",random(-32,32),random(-32,32),-2,0,0,0,0,SXF_NOCHECKPOSITION,0);
		}
		}
		TNT1 A 0 A_SpawnItemEx("FreezenadeExplosion", 0, 0 ,2.5);
		TNT1 A 10;
		stop;
		
	Fall:
		 //AXEG A 0 A_SpawnItemEX("Sparks");
		//AXEG A 0 A_startSound("AXECLN", 6);
		TNT1 A 0
		{
		tracer = null;
		bnogravity = false;
		}
	Goto Deathfloor;
	
	
	Bounce:
	TNT1 A 0
	{
	tracer = null;
	bhitowner = TRUE;
	A_startsound("IceNadeBounce",2);
	}
	Goto spawn;
	
	}
}

CLASS FreezeNadeAlt : Freezenade
{
Default
{
-bounceonwalls;
-bounceonfloors;
-bounceonceilings;
+explodeonwater;
-canbouncewater;

}
}


CLASS GrenadeTrail : Actor
{
	Default
	{
	Radius 1;
	Height 1;
	Speed 2;
	Damage 0;
    +NOBLOCKMAP;
    +NOTELEPORT;
    +DONTSPLASH;
	+MISSILE;
	+nointeraction;
	+thruactors;
	+FORCEXYBILLBOARD;
    +CLIENTSIDEONLY;
	RenderStyle "Add";
    Scale 0.3;
	Alpha 0.2;
	Gravity 0;
	}
	States
	{
    Spawn:
        TNT1 A 0;
        FRPB BCDEFGH 3 BRIGHT;
        Stop;
	}
}

CLASS GrenadeTrail2 : GrenadeTrail
{

	Default
	{
	translation "none";
	
	}
}

