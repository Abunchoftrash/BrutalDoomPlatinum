CLASS TripMine : actor
{
	Default
	{
		+wallsprite;
		radius 10;
		//height 20;
		Scale 0.08;
		//+nointeraction;
		Height 1;
		//+shootable;
		//+noblood;
		//+Shootable;
		//Health 100; 
		+nogravity;
	
	}
	actor beam;
	int laserangle;
	States
	{
		  Spawn:
        TRPM A 1 NoDelay
        {           
            FLineTraceData wallangle;
            LineTrace(angle, 1284, 0, TRF_THRUACTORS, offsetz: 3, data: wallangle);
            if (wallangle.HitType == TRACE_HitWall)
            {
			//	A_logint(wallangle.lineside);
               angle = atan2(wallangle.hitline.delta.y, wallangle.hitline.delta.x) - 90;
            }   
			
			If (wallangle.lineside == 1)
			{
				Angle = (angle - 180);
			}
			/*
			 FLineTraceData walllengthfront;
            LineTrace(angle, 9999, 0, TRF_THRUACTORS, offsetz: 3, data: walllengthfront);
			
			 FLineTraceData walllengthback;
            LineTrace(-angle, 9999, 0, TRF_THRUACTORS, offsetz: 3, data: walllengthback);
            
			If(walllengthback.distance > walllengthfront.distance)
			{
			LaserAngle = -angle;
			
			}
			Else
			{
			LaserAngle = angle;
			
			}
			*/
			
			A_startsound("bepbep",6);
        }
    Spawn2:
        TRPM A 65;
        TRPM A 1
        {
		FLineTraceData stillonwall;
            LineTrace((angle - 180), 12, 0, TRF_THRUACTORS, offsetz: 3, data: stillonwall);
			
		//	 LineTrace(-angle, 12, 0, TRF_THRUACTORS, offsetz: 3, data: wallangle);
			 If(stillonwall.HitType != TRACE_HitWall)
			{
			return resolvestate("onfloornow");
			
			
			}
			
            FLineTraceData peopleinmyway;
            LineTrace(angle, 5000, 0, 0, offsetz: 7, data: peopleinmyway);
            if (peopleinmyway.HitActor)
            {
               return ResolveState("Sight");
            }
            
                beam = Spawn("TripMineparticle", (pos.x,pos.y,pos.z + 3));
          
            if (beam)
            {
				beam.angle = angle;
                beam.pitch = 0;
                beam.scale.y = peopleinmyway.Distance;
                beam.pitch = -90;
            }
            return ResolveState(null);
        }
        wait;       
		
		
		Onfloornow:
		TRPM R 1
		{
		bwallsprite = false;
		bflatsprite = true;
		bnogravity = false;
		 FLineTraceData peopleinmyway;
            LineTrace(0, 5000, -90, 0, offsetz: 0, data: peopleinmyway);
            if (peopleinmyway.HitActor)
            {
               return ResolveState("Sightonfloor");
            }
            
                beam = Spawn("TripMineparticle", (pos.x,pos.y,pos.z));
          
            if (beam)
            {
				beam.angle = angle;
                beam.pitch = 0;
                beam.scale.y = peopleinmyway.Distance;
                beam.pitch = 180;
            }
            return ResolveState(null);
		}
		wait;
		
    Sight:
		TNT1 A 0 A_startsound("BEEEP",8);
		 TRPM AAAAAAAAAAA 1
        {
           
            FLineTraceData peopleinmyway;
            LineTrace(angle, 5000, 0, 0, offsetz: 7, data: peopleinmyway);
                beam = Spawn("TripMineparticle", (pos.x,pos.y,pos.z + 3));
          
            if (beam)
            {
				beam.angle = angle;
                beam.pitch = 0;
                beam.scale.y = peopleinmyway.Distance;
                beam.pitch = -90;
            }
        }
		Goto Death;
		 Sightonfloor:
		TNT1 A 0 A_startsound("BEEEP",8);
		 TRPM RRRRRRRRRRR 1
        {
           
            FLineTraceData peopleinmyway;
            LineTrace(0, 5000, -90, 0, offsetz: 0, data: peopleinmyway);
                beam = Spawn("TripMineparticle", (pos.x,pos.y,pos.z));
          
            if (beam)
            {
				beam.angle = angle;
                beam.pitch = 0;
                beam.scale.y = peopleinmyway.Distance;
                beam.pitch = 180;
            }
        }
		Death:
		/*
		 TRPM A 1
        {
           
            FLineTraceData peopleinmyway;
            LineTrace(angle, 5000, 0, 0, offsetz: 7, data: peopleinmyway);
              if (peopleinmyway.HitType != TRACE_Hitnone)
            {
               spawn("tripmineexplosion",peopleinmyway.hitlocation);
            }
			Else
			{
			 A_spawnitemex("TripMineexplosion",60);
			}
			
        }
		*/
		TNT1 A 0 A_spawnitemex("TripMineexplosion",60);
        TNT1 A 10;
        stop;       
		
	}


}


CLASS Tripmineparticle : actor
{
Default
{
+noblockmap;
+forcexybillboard;
scale 1.0;
alpha 0.9;
+nogravity;
+thruactors;
+NOTONAUTOMAP;
Renderstyle "Add";
}
States
{
Spawn:
TNT1 A 0;
//TNT1 A 0 A_setpitch(90);
L2NR A 1 BRIGHT ;
//{
//Pitch = -90;
//}
Stop;

}


}


CLASS TripPuff : actor
{
	Default
	{
		height 1;
		Radius 1;
		//+puffonactors;
		+bloodlessimpact;
		+nointeraction;
	}


}

CLASS tripmineprojectile : actor
{
	Default
		{
		Height 2;
		Radius 2;
		Speed 20;
		Scale 0.08;
		Projectile;
		
		}
		
		
	States
		{
			Spawn:
				TRPM A 1;
				LOOP;
				
				
			Death:
			Xdeath:
				TNT1 A 1 A_spawnitemex("tripmine",1,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
				TNT1 A 1;
				STOP;
			
		
		
		}




}