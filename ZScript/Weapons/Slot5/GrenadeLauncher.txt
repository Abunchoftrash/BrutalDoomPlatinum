Class GrenadeDetonates : Actor
{
	Default
	{
	Radius 4;
	Height 4;
	Speed 50;
	Damagefunction (60);
    +MISSILE;
    Gravity 0.7;
	+SKYEXPLODE;
	+BOUNCEONFLOORS;
	+BOUNCEONWALLS;
	+BOUNCEONCEILINGS;
	+bounceonactors;
	+EXPLODEONWATER;
	+THRUSPECIES;
	+BOUNCEAUTOOFFFLOORONLY;
	+usebouncestate;
	Species "Marines";
	DamageType "Kick";
    BounceFactor 0.5;
	WallBounceFactor 0.35;
	BounceSound "Weapons/GrenadeBounce";
	DeathSound "Weapons/GrenadeBounce";
	Decal "Scorch";
	Obituary "$OB_MPROCKET";
	Scale 0.7;
	}
	States
	{
	Spawn:
		GBPJ AAABBBCCC 1 
		{
			A_SpawnProjectile ("RocketSmokeTrail52", 2, 0, random (70, 110), 2, random (0, 360));
			//A_SpawnItemEX("RocketFlare");
		}
		Goto bounce;
	Spawn2:
		GBPJ AAABBBCCCDDDEEEFFFGGGHHH 1 
		{
			A_SpawnItemEX("GrenadeFlare");
			A_SpawnProjectile ("RocketSmokeTrail52", 2, 0, random (70, 110), 2, random (0, 360));
			If(target && target.player && target.player.cmd.buttons & BT_ATTACK)
			{
				Return resolvestate(null);
			}
			Else
			{
				Return resolvestate("Explode");
			}
		}
		Loop;
	Bounce:
		TNT1 A 0
		{
			If(target && target.player && target.player.cmd.buttons & BT_ATTACK)
			{
				Return resolvestate("spawn2");
			}
			Else
			{
				Return resolvestate("Explode");
			}
		}
	Death:
	Xdeath:

		GBPJ AAAA 1 
		{
			A_SpawnItemEX("GrenadeFlare");
			A_SpawnProjectile ("RocketSmokeTrail52", 2, 0, random (70, 110), 2, random (0, 360));
			If(target && target.player && target.player.cmd.buttons & BT_ATTACK)
			{
				Return resolvestate(null);
			}
			Else
			{
				Return resolvestate("Explode");
			}
		
		}
		Loop;
	
	Explode:
	    TNT1 A 0 A_stopsound(7);
		TNT1 A 0 A_StartSound("Explosion", 1);
		EXPL A 0 Radius_Quake (8, 8, 0, 128, 0);//(intensity, duration, damrad, tremrad, tid)
		TNT1 A 0 A_SpawnItemEx ("GrenadeExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
	   TNT1 A 0 A_spawnitemex("ricochetexplosion");
        TNT1 AAAAAAAAAA 0 A_spawnProjectile ("BDExplosionparticlesBig", 0, 0, random (0, 360), 2, random (0, 360));
		TNT1 AAAAAAA 0 A_SpawnProjectile ("BDExplosionparticles2", 0, 0, random (0, 360), 2, random (0, -90));
	   	TNT1 AAAA 0 A_spawnProjectile ("SmallExplosionFlames", 0, 0, random (0, 360), 2, random (0, 360))  ;
		TNT1 AAAAAAA 0 A_SpawnProjectile ("ExplosionFlames", 0, 0, random (0, 360), 2, random (0, 360));
        TNT1 AAAAAAAAAAAAAA 0 A_SpawnProjectile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, -180));
        TNT1 AAAAAA 0 A_SpawnProjectile ("ExplosionParticleHeavy", 0, 0, random (0, 180), 2, random (0, 180));
		TNT1 A 0 A_StartSound("FAREXPL", 3);
	//	TNT1 AAAAAAAAAA 4 A_CustomMissile ("ExplosionSmoke", 1, 0, random (0, 360), 2, random (50, 130))
	    TNT1 A 0 A_SpawnProjectile ("ExplosionSmoke", 1, 0, random (0, 360), 2, random (-50, -130));
		stop;
	}
}

CLASS FireGrenade : actor
{
	Default
	{
    Radius 4;
	Height 4;
	Speed 30;


  //  +BLOODSPLATTER
    Gravity 0.7;
	Damagefunction 0;
	+MISSILE;
	+FORCEXYBILLBOARD;
	+rollsprite;
	+ROLLCENTER;
	//+bloodlessimpact;
	//+BLOODSPLATTER;
	//+ripper;
	Obituary "%o was stuck by a freeze grenade";
	//SeeSound "weapons/chainsaw/loop"
	//+ripper
	+hittracer;
	+explodeonwater;
	+usebouncestate;
	+skyexplode;
	+bounceonwalls;
+bounceonfloors;
+bounceonceilings;
bouncecount 5;
-explodeonwater;
+canbouncewater;
BounceSound "Weapons/GrenadeBounce";
	}
	

		
	
    Vector3 stickOfs;
    double stickAngle;
	
	int sawtimer;
	int sawtimer2;
	bool hasexploded;
	bool stuck;
	bool ihitsomething;
	
	Override void tick()
	{
		Super.tick();
		A_spawnprojectile("SmallFlameTrails", 0, 0, random (0, 360), 2, random (-70, -110));
		A_spawnprojectile("firegrenade_debris", 0, 0, random (0, 360), 2, random (0, 360));
		A_spawnprojectile("firegrenade_debris", 0, 0, random (0, 360), 2, random (0, 360));
		A_spawnprojectile("firegrenade_debris", 0, 0, random (0, 360), 2, random (0, 360));
		sawtimer++;
		sawtimer2++;
		If(sawtimer >= 10)
		{
			sawtimer = 0;
			If(tracer && target)
			{
				
				tracer.damagemobj(Self,Target,15,"Fire");
				
			}
			A_explode(15,200,XF_HURTSOURCE | XF_THRUSTLESS, false, DAMAGETYPE: "Fire");
		}
		If(sawtimer2 >= 245)
		{
			A_stopsound(4);
			Destroy();
		}
	
	}
	
	
	Override void beginplay()
		{
		//tracer = null;
		super.beginplay();
		//savedangle = angle;
		}
	
	
	States
	{
	Spawn:
		GBPJ AAABBBCCCDDDEEEFFFGGGHHH 1
		{
		A_startsound("THRMT",4,CHANF_LOOPING);
		//savedheight = floorz;
		tracer = null;
		}
		Loop;
		
		
		

		Xdeath:
		TNT1 A 0;
		//TNT1 A 0 A_startsound("StickyGrenade/Hit");
		TNT1 A 0 
		{
		ihitsomething = true;
		stuck = true;
		//tracer = victim;
			If(tracer)
			{
				tracer.a_pain();
				stickOfs = tracer.Vec3To(self);
                    stickAngle = tracer.angle;
		busebouncestate = false;
		}
		If(!tracer)
		{
		setstatelabel("Death");
		}
		}
		Stuck:
		GBPJ A 1 
		{
		
		If(!tracer || tracer.health < 1)
		{
		setstatelabel("Death");
		}


			If(tracer && tracer.health > 0)
			{
			/*
			If(tracer.health < 200 && !tracer.findinventory("melee_attacks"))
			{
			//tracer.angle = (tracer.angle + frandom(-40,40));
		//	tracer.a_stop();
		//	tracer.a_recoil(-7);
			tracer.reactiontime = 10;
			}
			*/
			
				double angDiff = DeltaAngle(stickAngle, tracer.angle);
					if (angDiff)
					{
						stickOfs.xy = RotateVector(stickOfs.xy, angDiff);
						angle += angDiff;
					}

				SetOrigin(tracer.Vec3Offset(stickOfs.x, stickOfs.y, stickOfs.z), true);
				stickAngle = tracer.angle;
				//tracer.a_stop();
			
				//Warp(tracer,calculatingpos.x,calculatingpos.y,calculatedpos.z,savedangle,WARPF_NOCHECKPOSITION | WARPF_ABSOLUTEANGLE | WARPF_INTERPOLATE | WARPF_TOFLOOR);
				//angle = savedangle;
			}
		
			
		}
		LOOP;
		
		death:
		TNT1 A 0 
		{
		ihitsomething = true;
		//A_startsound("StickyGrenade/Hit");
		tracer = null;
		}
		
		TNT1 A 0
		{
		busebouncestate = false;
		bnogravity = true;
		}
		StayDead:
		GBPJ A 1;
		LOOP;
		

		
		
	
	ExplodeTime:
	TNT1 A 0;
		TNT1 A 10;
		stop;
		
	Fall:
		 //AXEG A 0 A_SpawnItemEX("Sparks");
		//AXEG A 0 A_startSound("AXECLN", 6);
		TNT1 A 0
		{
		tracer = null;
		bnogravity = false;
		}
	Goto Deathfloor;
	
	
	Bounce:
	TNT1 A 0
	{
	tracer = null;
	bhitowner = TRUE;
	}
	Goto spawn;
	
	}
}

Class FireGrenade_Debris : Actor
{
	Default
	{
	height 1;
	radius 1;
	mass 0;
	speed 3;
	+CLIENTSIDEONLY;
	+MISSILE +NOBLOCKMAP +DOOMBOUNCE;
	bouncefactor 0.3;
	renderstyle "Add";
	scale 0.03;
	Gravity 0.8;
  }
  
  Override void beginplay()
  {
	Speed = frandom(4,20);
	float potentialscale = frandom(0.01,0.05);
	A_setscale(potentialscale,potentialscale);
	Super.beginplay();
  }
  states
  {
  Spawn:
    SPRK A random(1,10) bright;
  Death:
    SPRK A 1 bright A_FadeOut (0.1);
    loop;


  }
}