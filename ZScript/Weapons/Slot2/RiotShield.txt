CLASS RiotShield : BrutalWeapon
{
	Default
		{
			Weapon.AmmoUse1 0;
			Weapon.AmmoGive1 0;
			Weapon.AmmoType2 "MP40Ammo";
			Weapon.AmmoUse2 0;
			Weapon.AmmoGive2 0;
			Weapon.AmmoType1 "Clip1";
			Obituary "%o was shot down by %k's MP40.";
			AttackSound "None";
			Inventory.PickupSound "CLIPIN";
			Inventory.Pickupmessage "I am a monument to all your sins";
			+WEAPON.NOALERT;
			//+WEAPON.CHEATNOTWEAPON
			Weapon.SelectionOrder 1500;
			Scale 1.0;
			Inventory.AltHUDIcon "MP40I0";
			+Weapon.POWERED_UP;
			Weapon.sisterweapon "MP40";
			brutalweapon.handedness 2;
			+weapon.no_auto_switch;
		}
	States
		{
		
			SprintOverlay:
				TNT1 A 0 A_overlay(2,"SprintShield");
				S40K GHIJK 1;
				S40K K 1;
				WAIT;
				ReturnFromSprint:
				TNT1 A 0 A_overlay(2,"ReturnFromSprintShield");
				S40K KJIHG 1;
				Goto ready;
			SprintShield:
				RSHD KLMNO 1 A_spawnitemex("riotshieldphysics2",16,-12);
				RSHD O 1 A_spawnitemex("riotshieldphysics2",16,-12);
				WAIT;
				ReturnFromSprintShield:
				RSHD ONMLK 1 A_spawnitemex("riotshieldphysics2",16,-12);
				Stop;
			Select:
				TNT1 A 0;
				TNT1 A 0 A_instaraise();
				Goto selectfirstpersonlegs;
				SelectContinue:
				TNT1 A 0 A_Jumpifinventory("switchingdualmodes",1,"selectfromsingle");
				TNT1 A 0 A_overlay(2,"Select2");
				RSHD JIHGF 1 A_spawnitemex("riotshieldphysics2",16,-12);
				Goto ready;
			Select2:
				S40S IHGF 1;
				Sp42 A 1;
				Stop;
			SelectFromSingle:
				TNT1 A 0 A_takeinventory("switchingdualmodes",1);
				M40S NMLKJ 1;
				TNT1 A 0 A_overlay(2,"IdleWeapon");
				RSHD JIHGF 1 A_spawnitemex("riotshieldphysics2",16,-12);
				Goto ready;
			Deselect:
				TNT1 A 0 A_overlay(2,"DeSelect2");
				RSHD FGHIJ 1 A_spawnitemex("riotshieldphysics2",16,-12);
				TNT1 A 0 A_lower(24);
				Wait;
			DeSelect2:
				Sp42 A 1;
				S40S FGHI 1;
				
				Stop;
			KickingFlash:
			AirKickingFlash:
			SlideKickingStart:
				TNT1 A 0 A_overlay(2,"KickShield");
				S40K GHIJK 1;
				S40K K 6;
				S40K KJIHG 1;
				Goto ready;
			KickShield:
				RSHD KLMNO 1 A_spawnitemex("riotshieldphysics2",16,-12);
				RSHD O 6 A_spawnitemex("riotshieldphysics2",16,-12);
				RSHD ONMLK 1 A_spawnitemex("riotshieldphysics2",16,-12);
				Stop;
			
			Ready:
				TNT1 A 0 A_overlay(2,"Ready2");
				RSHD A 1 
				{
					A_spawnitemex("riotshieldphysics2",16,-12);
					A_weaponreadyDX();
				}
				LOOP;
			Ready2:
				SP42 A 1;
				Stop;
			IdleWeapon:
				SP42 A 1;
				Wait;
			IdleSHield:
				RSHD A 1 A_spawnitemex("riotshieldphysics2",16,-12);
				Wait;
			Fire:
				TNT1 A 0 A_overlay(2,"IdleShield");
				TNT1 A 0 A_jumpifinventory("MP40Ammo",1,1);
				Goto noammo;
				
				SP42 A 0 a_STARTSOUND("FARSHT", 6);
				SP42 A 0 a_STARTSOUND("MP40", 1);
				SP42 A 0 A_SetPitch(Pitch-0.6, SPF_INTERPOLATE);
				SP42 A 0 A_ZoomFactor(0.99);
				//MP42 A 0 A_fireProjectile("YellowFlareSpawn",0,0,0,0)
				"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("MP40Ammo")<=16) { a_STARTSOUND("MagClick", 7); }}}
				SP42 D 1 BRIGHT A_FireBullets (4, 3, -1, 15, "WeakPuff", FBF_NORANDOM,8192,"decorativetracer",-12,16);
				SP42 A 0 A_SetPitch(Pitch+0.2, SPF_INTERPOLATE);
				SP42 A 0 A_ZoomFactor(1.0);
				RIFF A 0;// A_fireProjectile("DecorativeTracer", random(-6,3), 0, 5, 0)
				SP42 A 0 A_Takeinventory("MP40Ammo",1);
				SP42 E 1;
				SP42 A 2;
				SP42 A 0 A_fireProjectile("PistolCaseSpawn",5,0,20,-2);
				SP42 A 0 A_ReFire();
				Goto ready;
			AltFire2:
				RSHD ABCDE 1 A_spawnitemex("riotshieldphysics2",16,-12);
				Stop;
			Altfire:
				TNT1 A 0 A_overlay(2,"Altfire2");
				Sp42 A 1;
				S40S FGHI 1;
				
			HoldingAlt:
				RSHD E 1 A_spawnitemex("riotshieldphysics",16);
				TNT1 A 0 A_jumpifinventory("firedsecondary",1,"HoldingAlt");
				TNT1 A 0 A_overlay(2,"StopHoldingAlt2");
				S40S IHGF 1;
				Sp42 A 1;
				Goto ready;
			StopHoldingAlt2:
				RSHD EDCBA 1 A_spawnitemex("riotshieldphysics2",16,-12);
				Stop;
			SpecialAction:
				//TNT1 A 0 A_takeinventory("shieldselected",1);
				TNT1 A 0 A_giveinventory("switchingdualmodes",1);
				TNT1 A 0 A_overlay(2,"IdleWeapon");
				RSHD FGHIJ 1 A_spawnitemex("riotshieldphysics2",16,-12);
				TNT1 A 0 A_selectweapon("mp40");
				Goto instadeselect;
			NoAmmo:
				TNT1 A 0 A_overlay(2,"IdleShield");
				RIFG A 0;
				RIFG A 0 A_ZoomFactor(1.0);
				RIFG A 0 A_Takeinventory("Zoomed",1);
				RIFG A 0 A_Takeinventory("ADSmode",1);
				RIFG A 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
				TNT1 A 0 a_STARTSOUND("weapons/empty", 4);
			NoAmmo2:
				SP42 A 5;// A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOFIRE);
				RIFG A 0 A_JumpIfInventory("Reloading",1,"Reload");
				TNT1 A 0 A_JumpIf(GetCvar("bd_NoAutoReload")==1, "Ready");
				RIFG A 0 A_JumpIfInventory("Clip1",1,"Reload");
				RIFG A 0 A_JumpIfInventory("FiredPrimary",1,"NoAmmo2");
				Goto Ready;
				
				
				Reload:
					MP42 A 0 A_Takeinventory("ADSmode",1);
					MP42 A 0 A_Takeinventory("Reloading",1);
					MP42 A 0 A_JumpIfInventory("MP40Ammo", getCVAR("bd_MP40Mag"),"Ready");
					MP42 A 0 A_JumpIfInventory("Clip1",1,3);
					Goto NoAmmo;
					TNT1 AAA 0;
					MP42 A 0 A_Takeinventory("Zoomed",1);
					MP42 A 0 A_ZoomFactor(1.0);
					MP42 A 0 A_GiveInventory ("Pumping", 1);
					MP42 A 0 A_Takeinventory("Reloading",1);
					MP42 A 0 A_JumpIfInventory("TurboReload",1,"TurboReload");
					TNT1 A 0 A_overlay(2,"DeSelect2");
					RSHD FGHIJ 1 A_spawnitemex("riotshieldphysics2",16,-12);
					TNT1 A 4;
					MP42 A 0 A_startSound("MP40REL1");
					MP4R UTCDEFHIJ 1 ;
					MP40 A 0 A_FireProjectile("EmptyPistolClipSpawn",-5,0,25,-9);
					MP40 A 0 A_JumpIfInventory("HasUnloaded", 1, 2);
					MP4R J 9;
					MP4R KK 1;
					MP40 A 0 A_StartSound("MP40REL2");
					MP4R LMNOPPQQQQRSTU 1;
					TNT1 A 3;
					TNT1 A 0 A_overlay(2,"Select2");
					RSHD jihgf 1 A_spawnitemex("riotshieldphysics2",16,-12);
			
				TurboReload:
					MP42 A 0 A_Takeinventory("HasUnloaded",1);
					SM2S BA 0;
					Goto InsertBullets;
		
				InsertBullets:
					TNT1 AAAA 0;
					MP42 A 0 A_JumpIfInventory("MP40Ammo", getCVAR("bd_MP40Mag"),15);
					MP42 A 0 A_JumpIfInventory("Clip1",1,3);
					Goto Ready;
					TNT1 AAAAAA 0;
					MP42 A 0 A_Giveinventory("MP40Ammo",1);
					MP42 A 0 A_Takeinventory("Clip1",1);
					Goto InsertBullets;
		
					TNT1 AAAAAAAAAA 0;
					MP42 A 0 A_Takeinventory("Reloading",1);
			
					MP42 A 0 A_Refire();
					Goto Ready;
					TNT1 AAAA 0;
					MP42 A 0 A_Takeinventory("Reloading",1);
		
					MP42 A 0 A_Refire();
					Goto Ready;
			Spawn:
				5L1D I -1;
				Wait;
			
			
			
			
			
		}
	
	}
	
	

CLASS RiotShieldPhysics : Actor
	{
	Default
		{
		+thruspecies;
			+shootable;
			+buddha;
			//+noblood;
			Bloodtype "HitPuff";
			Height 64; 
			Radius 8;
		Species "marines";
		Radius 16;
		//+solid;
		bloodtype "hitpuff";
	//	+reflective;
		+mirrorreflect;
		//+shieldreflect;
		+solid;
		//+noblocking;
		}
			States
			{
		Spawn:
			TNT1 A 0;
			TNT1 A 1;
			TNT1 A 0 
			{
			If(tracer && !tracer.findinventory("shieldselected"))
			{
			//tracer.setstatelabel("spawn");
			tracer.A_spawnitemex("hitpuff");
			tracer.giveinventory("shieldselected",1);
			float angleoffset = (tracer.angle + frandom(-45,45));
			If (tracer.speed < 10)
			{
			tracer.speed = 10;
			}
			tracer.vel3dfromangle(tracer.speed,angleoffset,tracer.pitch);
			//tracer.damagefunction = (tracer.damagefunction * 0.25);
			tracer.angle = angleoffset;
			}
			}
			STOP;
			}
			
	Override bool cancollidewith(Actor other, bool passive)
		{
		If (other && other is "playerpawn" || other && other is "footstep" || other && other is "taunter" || other && other is "detectfloorbullet")
			{
			breflective = false;
			Return false;
			}
			Else
			{
			other.A_startsound("ricochet",24);
			breflective = true;
			If(other.bmissile)
			{
			tracer = other;
			
			//Tracer.angle = (tracer.angle + frandom(-45,45));
			}
			return true;
			
			}
			
		}
		
		
	}
CLASS RiotShieldPhysics2 : riotshieldphysics
	{
	Default
		{
		
		Radius 8;
		
		}
		
	
	}
	
	
	
	
	CLASS DropedMP40 : Actor
{
Bool bflipped;
	Default
	{
 scale 1.0;
 speed 6;
 health 1;
 radius 16;
 height 4;
 Gravity 0.9;
 damage 0;
 XScale 0.7;
 YScale 0.4;
 +THRUACTORS;
 +MISSILE;
 +NOTELEPORT;
 +NOBLOCKMAP;
 +BLOODLESSIMPACT ;
   +FORCEXYBILLBOARD;
   +NODAMAGETHRUST;
   +MOVEWITHSECTOR;
   +CORPSE;
   -DONTSPLASH;
   +rollsprite;
   Mass 1;
   }
    States
    {

	 Spawn:
	 TNT1 A 0;
	 MP40 I 4
	 {
	 If(random(1,2)==1)
	 {
	 bflipped = true;
	 
	 }
	 bthruactors = true;
	 }
	 Stay:
	 MP40 IIIIIIIIIIII 4 
	 {
	 If(bflipped)
	 {
	 A_setroll(roll + 45);
	 }
	 Else
	 {
	  A_setroll(roll - 45);
	 }
	 }
	 Loop;
	 
	 Death:
	 TNT1 A 0;
	 TNT1 A 0 A_SPawnItemEX("MP40Spawner");
	 Stop;
    }
}

CLASS DropedRiotSHield : DropedMP40
	{
		Default
			{
				xscale 1.0;
				yscale 1.0;
			
			
			}
	
		 States
    {

	 Spawn:
	 TNT1 A 0;
	 5L1D A 4
	 {
	 If(random(1,2)==1)
	 {
	 bflipped = true;
	 
	 }
	 bthruactors = true;
	 }
	 Stay:
	 5L1D AAAAAAAAA 4 
	 {
	 If(bflipped)
	 {
	 A_setroll(roll + 45);
	 }
	 Else
	 {
	  A_setroll(roll - 45);
	 }
	 }
	 Loop;
	 
	 Death:
	 TNT1 A 0;
	 TNT1 A 0 A_SPawnItemEX("RiotSHieldSpawner");
	 Stop;
    }
	
	}
	
CLASS RiotShieldSpawner : CustomInventory
	{
	Default
		{
		Radius 8;
		Height 8;
		+inventory.autoactivate;
		Inventory.Pickupmessage "You got a Riot Shield! Use it with an MP40!";
		}
		
	States
		{
		Spawn:
			5L1D I -1;
				Wait;
		Pickup:
			TNT1 A 0 A_giveinventory("HasRiotSHield",1);
			Stop;
		
		
		}
	}
	
	
CLASS PlasmaShield : Actor
	{
	
	Default
	{
		Renderstyle "Add";
		Alpha 0.4;
		+Bright;
		//Scale 0.7;
		+wallsprite;
		Health 300;
		+shootable;
		+solid;
		//+thruactors;
		radius 100;
		height 64;
		BloodType "HoloBlood";
	}
	override bool CanCollideWith(Actor other, bool passive)
	{
		bool res = super.CanCollideWith(other, passive);
		if (passive && other && res && other.bMISSILE)
		{
			double angto = DeltaAngle(angle, AngleTo(other));
			if (abs(angto) < 45)
			{
				return false;
			}
		}
		return res;
		}
	States
		{
			Spawn:
			PSHL AB 3;
			LOOP;
		}
	}