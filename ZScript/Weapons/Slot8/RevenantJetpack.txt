



CLASS HellishMissileLauncher : BrutalWeapon 
{
	Default
	{
		Height 20;
		Weapon.SelectionOrder 2600;
		Weapon.AmmoUse1 0;
		Weapon.AmmoGive 0;
		Weapon.AmmoType1 "soulammo";
		Weapon.AmmoType2 "Gas";
		Weapon.ammogive2 20;
		Inventory.PickupSound "revup";
		+WEAPON.NOAUTOAIM;
		+WEAPON.EXPLOSIVE;
		//+WEAPON.NO_AUTO_SWITCH
		+WEAPON.AMMO_OPTIONAL;
		Inventory.PickupMessage "You got the Hellish Missile Launcher! (Slot 8)";
		Tag "Hellish Missile Launcher";
		Inventory.AltHUDIcon "FATBD0";
		BrutalWeapon.ClearOverlays 0;
	}
	
	int jumptimer;
	bool jetpackon;
	
	
	override void DoEffect() 
	{
		
		If(owner.player.readyweapon is "HellishMissileLauncher" && owner.player.cmd.buttons & BT_JUMP && owner.countinv("gas") > 0 && jumptimer <= 0)
		{
			
				owner.giveinventory("jetpackmoving",1);
					owner.a_startsound("JETLOOP",6,CHANF_LOOPING);
				jetpackon = true;
				If(owner.vel.z < 15 && owner.vel.z > -10)
				{
					owner.vel.z = (owner.vel.z + 1.35);
				}
				Else if(owner.vel.z < 15)
				{
					owner.vel.z = (owner.vel.z + 3);
				}
				if (level.time % 6 == 0)
				{
					owner.takeinventory("gas",1);
				}
				owner.A_SpawnItemEx(
				"jetpackflametrails",
				xofs:-5,
				yofs:-8,
				zofs:36,frandom(-1,1),frandom(-1,1),-3
				
				);
				owner.A_SpawnItemEx(
				"jetpackflametrails",
				xofs:-5,
				yofs:8,
				zofs:36,frandom(-1,1),frandom(-1,1),-3
				);
			
		}
		Else if(jetpackon)
		{
			owner.A_StartSound("JETEND",6);
			Jumptimer = 14;
			jetpackon = false;
		}
		Else if(jumptimer > 0)
		{
		jumptimer--;
		}
		super.DoEffect();
		
		
		
	}
	States
	{
	

	
	
	
	Taunt:
	    TNT1 A 0 A_Takeinventory("Taunting",1);
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 0, 0, -1, 0);
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", -9, 0, -1, 0);
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 9, 0, -1, 0);
		TNT1 A 0 A_Jump(256, "FuckYourself", "FhaccYoself", "GoFuckYourself", "GetOffScum")		;
	FuckYourself:
		TNT1 A 0 ACS_NamedExecute("InsultFuckYourself",0,0);
        PI2F I 0 A_PlaySound("FUCK1", 2);
		Goto Ready;
	FhaccYoself:
		TNT1 A 0 ACS_NamedExecute("InsultFhaccYoself",0,0);
        TNT1 I 0 A_PlaySound("FUCK3", 2);
		Goto Ready;
	GoFuckYourself:
		TNT1 A 0 ACS_NamedExecute("InsultGoFuckYourself",0,0);
        TNT1 I 0 A_PlaySound("FUCK4", 2);
		Goto Ready;
	GetOffScum:
		TNT1 A 0 ACS_NamedExecute("InsultGetOffScum",0,0);
        TNT1 I 0 A_PlaySound("FUCK2", 2);
        Goto Ready;
		 	

	
	
	
	GrenadeThrowFlashHands:
	    RVCG OPQR 1;
	    TNT1 A 24;
	    RVCG RQPO 1;
	    RVCG A 0 A_Overlay(4, "ReadyHands");
	    stop;
	
	GrenadeThrowFlash:
	   RVCG A 0 A_Overlay(4, "GrenadeThrowFlashHands");
		RVCG A 32; //32 in total
		stop;
		
		
	
	KickingFlash:
		RVCG A 16;
		Goto Ready;
	AirKickingFlash:
		RVCG A 18; //18
		Goto Ready;
	
	 SlideKickingStart:
		RVCG A 5;
		RVCG AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 1 { //39 total
			if (CountInv("Kicking") == 0) {
				return resolvestate("SlideKickingEnd");
			}
			return state(null);
		}
		Goto Ready;

	 SlideKickingEnd:
		RVCG A 10; //10
		Goto Ready;
	
	LedgeGrabFlash:
		TNT1 A 0 a_overlayflags(OverlayID(), PSPF_ADDBOB,false);
		TNT1 A 0 A_ClearOverlays(4,4);
		RVCG A 10;
		RVCG A 0 A_Overlay(4, "SelectAnimationHands");
		Stop;
	
	FuckYouFlash:
		RVCG A 28; //18
		stop;
	
	Steady:
	TNT1 A 1;
	Goto Ready;
	
	ReadyHands:
		RVCG O 1;
		Goto ReadyHands;
	
	
	

	
	
	Sprintoverlay:
	TNT1 A 0 a_overlayflags(OverlayID(), PSPF_ADDBOB,false);
	RVCG A 1;
	LOOP;
	
	
	
	
	
	
	Ready:
	Ready3:
		RVCG A 0;
		RVCG A 1 { 
		if (CountInv("Kicking") == 1)
			{
			A_WeaponReadyDX(WRF_NOSWITCH,FALSE,FALSE);
			
			}
			else
			{
			A_WeaponReadyDX(0,FALSE,FALSE);
			}
		}
		
		LOOP;
	
		
		
		
	
		
	Deselect: RVCG A 0 A_TakeInventory("IsPlayingDoxMod",1);
		RVCG A 0 A_ClearOverlays(-2,-2);
		RVCG A 0 A_Overlay(4, "DeselectAnimationHands");
		RVCG NMLKJ 1 {
			A_ClearOverlays(-5,-5);
			/*
			if (roll < 0) {
				roll += 2.0;
			}
			if (roll > 0) {
				roll -= 2.0;
			}
			A_SetRoll(roll);
			*/
		}
		
		RVCS A 0 A_Takeinventory("StartDualWield",1);
		TNT1 AAAAAAAAAAAAAAAA 0 A_Lower();
		TNT1 A 1 A_Lower();
		Wait;
	Select:
		TNT1 A 0;
		NULL A 0{if(GetCVAR("bd_SmartCrosshairs") == 1){A_SetCrosshair(GetCVAR("HMLCrosshair"));}else{A_SetCrosshair(0);}}
		Goto SelectFirstPersonLegs;
		SelectContinue: RVCG A 0 A_GiveInventory("IsPlayingDoxMod",1) ;
		TNT1 A 1;
		TNT1 A 0 A_Giveinventory("GoSpecial",1);
		TNT1 A 0 A_Giveinventory("RevenantLauncherSelected",1);
		
		TNT1 AAAAAAAAAAAAAAA 0 A_Raise();
		Goto SelectAnimation;
		
	SelectAnimation:
	ReturnFromNothing:
	TNT1 A 0 A_PlaySound("revup");
	TNT1 A 0 
			{
		}
	     
		RVCG A 0 A_Overlay(4, "SelectAnimationHands");
		RVCG A 0 A_OverlayFlags(1, PSPF_ADDBOB, FALSE);
		RVCG JKLMN 1;
		Goto Ready;
		
	
	SelectAnimationHands:
		RVCG RQPO 1;
		TNT1 A 0 A_giveinventory("yesimrevlauncher",1);
		Goto ReadyHands;
	DeselectAnimationHands:
		RVCG OPQR 1;
		Wait;
		
		
    Spawn:
        FATB D 1;
        Loop;
		
	Fire:
		//RVCG A 0 A_CheckIfAmmo("soulammo", 3)
		RVCG A 0 A_PlaySOund("RLANSHOT", 1);
		TNT1 A 0 a_alertmonstersDX();
		//"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("soulammo")<=6) { A_PlaySound("MagClick", 7); }}}
		RVCG A 0 A_ZoomFactor(0.99);
		RVCG A 0 
		{
			If(countinv("soulammo") < 1)
			{
				A_damageself(3,"desintegrate");
			}
			A_TakeAmmo("soulammo", 1);
		}
		RVCG A 0 A_JumpIfInventory("RevenantRocketFire1823", 1, "OpenFire2");
		
		RVCG A 0 A_GiveInventory("RevenantRocketFire1823", 1);
		
		RVCG A 0 A_Overlay(4, "FireHand1");
	    RVCG A 0 BRIGHT A_FireCustomMissile("Alerter", 0, 0, -1, 0);
		RVCG AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -15, 0, 0, random(-9,9));
		RVCG AA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -15, 0, 0, random(-9,9));
		RVCG A 0 A_SetAngle(Angle+0.6, SPF_INTERPOLATE);
		RVCG A 0 A_SetPitch(Pitch+0.4, SPF_INTERPOLATE);
        RVCG B 1 BRIGHT 
		{
		A_FireCustomMissile("revenantseekermissiles2", 0, 1, -15, 0);
		}
		RVCG A 0 A_ZoomFactor(1.0);
		RVCG C 1 BRIGHT A_SetPitch(Pitch-0.4, SPF_INTERPOLATE);
		RVCG DE 1 A_SetAngle(Angle-0.3, SPF_INTERPOLATE);
		RVCG A 3 A_FireCustomMissile("SmokeSpawner11",0,0,-26,10);
		Goto Ready;
		
	FireHand1:
		RVCG T 1;
		RVCG S 3;
		RVCG T 1;
		Goto ReadyHands;
		
	OpenFire2:
	    RVCG A 0 A_TakeInventory("RevenantRocketFire1823", 1);
		RVCG A 0 A_Overlay(4, "FireHand2");
		TNT1 A 0 a_alertmonstersDX();
	    RVCG AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, 15, 0, 0, random(-9,9));
		RVCG AA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, 15, 0, 0, random(-9,9));
	    RVCG A 0 BRIGHT A_FireCustomMissile("Alerter");
		RVCG A 0 A_SetAngle(Angle-0.6, SPF_INTERPOLATE);
		RVCG A 0 A_SetPitch(Pitch+0.4, SPF_INTERPOLATE);
	    RVCG F 1 BRIGHT 
		{
		
		A_FireCustomMissile("revenantseekermissiles2", 0, 1, 15, 0);
		
		}
		RVCG A 0 A_ZoomFactor(1.0);
		RVCG G 1 BRIGHT A_SetPitch(pitch-0.4, SPF_INTERPOLATE);
		RVCG HI 1 A_SetAngle(Angle+0.3, SPF_INTERPOLATE);
		RVCG A 3 A_FireCustomMissile("SmokeSpawner11",0,0,26,10);
		Goto Ready;
		
	FireHand2:
		RVCG V 1;
		RVCG U 3;
		RVCG V 1;
		Goto ReadyHands;
		
	AltFire:
	//	RVCG A 1
	    
		//RVCG A 0 A_CheckIfAmmo("soulammo", 6, "Fire")
		RVCG AA 0;
		RVCG A 0 A_Overlay(4, "FireHandsLonger");
		RVCG A 0 
			{
			If(countinv("soulammo") < 1)
			{
				A_damageself(3,"desintegrate");
			}
			A_TakeAmmo("soulammo", 1);
		}
		
	    RVCG A 0 BRIGHT A_FireCustomMissile("Alerter", 0, 0, -1, 0);
		//
		RVCG A 0 A_PlaySOund("RLANSHOT", 1);
		TNT1 A 0 a_alertmonstersDX();
		//"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("soulammo")<=6) { A_PlaySound("MagClick", 7); }}}
		RVCG A 0 A_ZoomFactor(0.98);
		RVCG AA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -15, 0, 0, random(-9,9));
		RVCG A 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -15, 0, 0, random(-9,9));
		RVCG A 0 A_SetAngle(Angle+random(-1,1), SPF_INTERPOLATE);
		RVCG A 0 A_SetPitch(Pitch+random(-1,1), SPF_INTERPOLATE);
        RVCG B 1 BRIGHT
		{
		
		A_FireCustomMissile("revenantseekermissiles3", 0, 1, -15, 0);
		
		}
		RVCG C 1 A_ZoomFactor(1.0);
		//
		RVCG A 0 
		{
			If(countinv("soulammo") < 1)
			{
				A_damageself(3,"desintegrate");
			}
			A_TakeAmmo("soulammo", 1);
		}
		TNT1 A 0 a_alertmonstersDX();
		RVCG A 0 A_PlaySOund("RLANSHOT");
		//"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("soulammo")<=6) { A_PlaySound("MagClick", 7); }}}
		RVCG A 0 A_ZoomFactor(0.98);
		RVCG AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, 15, 0, 0, random(-9,9));
		RVCG AA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, 15, 0, 0, random(-9,9));
		RVCG A 0 A_SetAngle(Angle+random(-1,1), SPF_INTERPOLATE);
		RVCG A 0 A_SetPitch(Pitch+random(-1,1), SPF_INTERPOLATE);
		RVCG F 1 BRIGHT 
		{
		
		A_FireCustomMissile("revenantseekermissiles3", 0, 1, 15, 0);
		}
		
		RVCG G 1 A_ZoomFactor(1.0);
		//
		RVCG A 0 
			{
			If(countinv("soulammo") < 1)
			{
				A_damageself(3,"desintegrate");
			}
			A_TakeAmmo("soulammo", 1);
		}
		TNT1 A 0 a_alertmonstersDX();
		RVCG A 0 A_PlaySOund("RLANSHOT", 1);
		//"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("soulammo")<=6) { A_PlaySound("MagClick", 7); }}}
		RVCG A 0 A_ZoomFactor(0.98);
		RVCG AA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, -15, 0, 0, random(-9,9));
		RVCG A 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, -15, 0, 0, random(-9,9));
		RVCG A 0 A_SetAngle(Angle+random(-1,1), SPF_INTERPOLATE);
		RVCG A 0 A_SetPitch(Pitch+random(-1,1), SPF_INTERPOLATE);
		RVCG B 1 BRIGHT 
		{
		
		A_FireCustomMissile("revenantseekermissiles3", 0, 1, -15, 0);
		
		}
		RVCG C 1 A_ZoomFactor(1.0);
		//
		RVCG A 0 
		{
			If(countinv("soulammo") < 1)
			{
				A_damageself(3,"desintegrate");
			}
			A_TakeAmmo("soulammo", 1);
		}
		TNT1 A 0 a_alertmonstersDX();
		RVCG A 0 A_PlaySOund("RLANSHOT");
		//"----" A 0 { If(GetCVAR("BD_MagGoClicky")==1) { if(CountInv("soulammo")<=6) { A_PlaySound("MagClick", 7); }}}
		RVCG A 0 A_ZoomFactor(0.98);
		RVCG AAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-12,12), 0, 15, 0, 0, random(-9,9));
		RVCG AA 0 BRIGHT A_FireCustomMissile("ShotgunParticles2", random(-12,12), 0, 15, 0, 0, random(-9,9));
		RVCG A 0 A_SetAngle(Angle+random(-1,1), SPF_INTERPOLATE);
		RVCG A 0 A_SetPitch(Pitch+random(-1,1), SPF_INTERPOLATE);
		RVCG F 1 BRIGHT 
		{
		
		A_FireCustomMissile("revenantseekermissiles3", 0, 1, 15, 0);
		
		}
		RVCG G 1 A_ZoomFactor(1.0);
		//
		RVCG W 3;
		RVCG X 2;
		RVCG AAA 3
		{
		A_FireCustomMissile("SmokeSpawner11",0,0,-26,10);
		A_FireCustomMissile("SmokeSpawner11",0,0,26,10);
		}
		Goto Ready;
		
		
		
		FireHandsLonger:
		RVCG Z 7;
		RVCG Y 2;
		RVCG T 1;
		Goto ReadyHands;
		
	NoAmmo:
		RVCG A 0 A_ZoomFactor(1.0);
		RVCG A 0 A_Overlay(4, "FireHand1");
		RVCG A 1;
		RVCG A 0 A_PlaySound("weapons/empty", 4);
		RVCG A 4;
		RVCG A 0 A_Overlay(4, "FireHand2");
		RVCG A 1;
		RVCG A 0 A_PlaySound("weapons/empty", 4);
		RVCG A 4;
		Goto Ready3;
		
		
	}
}

Class revjetpack : Inventory {
	
	protected int dur; //this will hold the current value of duration
	int duration; //this will hold max duration
	property duration : duration; //this turns the variable above into a property
	Default {
		+INVENTORY.UNDROPPABLE
		+INVENTORY.UNTOSSABLE
		inventory.maxamount 1;
		//This controls how long the jetpack lasts in seconds
		revjetpack.duration 7;
	}
	
	//this is called when the revenant is given the item
	Override void Postbeginplay()
    {
    Owner.bfloatbob = TRUE;
    Owner.bfloat = TRUE;
    Owner.bnogravity = true;
    Owner.a_giveinventory("revtoken",1);
    Owner.a_startsound("JETLOOP",6,CHANF_LOOPING);
    
    }
	
	//this is called when the item is taken from the revenant
	Override void detachfromowner()
    {
    Owner.bfloatbob = false;
    Owner.bfloat = false;
    Owner.bnogravity = false;
    Owner.a_takeinventory("revtoken",1);
    Owner.a_stopsound(6);
    Owner.a_startsound("JETEND",6);
    
    }

	//Items that don't spawn in the world don't need their Tick. Emptying it will actually help performace:
	Override void Tick() {}
	
	//This function is executed every tic by items while they're in an actor's inventory:
	Override void DoEffect() {
		super.DoEffect();
		if (owner.isFrozen())
			return;
		//if they die this makes sure they stop flying
		if (owner.health <= 0) {		
			DepleteOrDestroy();
			return;
		}
		
		
		//increments duration and destroys the item when duration is at max
		if (level.time % 35 == 0) {
			if (dur < duration)
				dur++;
			else {
				DepleteOrDestroy();
				return;
			}
		}

		//every tick a stream of fire is spawned at either shoulder
			owner.A_SpawnItemEx(
				"jetpackflametrails",
				xofs:-5,
				yofs:-8,
				zofs:54,frandom(-1,1),frandom(-1,1),-3
				
				);
				owner.A_SpawnItemEx(
				"jetpackflametrails",
				xofs:-5,
				yofs:8,
				zofs:54,frandom(-1,1),frandom(-1,1),-3
				);


		
	}
}

Class revflametrail: Actor {
	Default {
		+NOINTERACTION
		+BRIGHT
		renderstyle 'Add';
		//Alpha 0.9;
		//turns it upside down
		+yflip;
		
	}
	Override void PostBeginPlay() {
		Super.PostBeginPlay();
		scale.x *= frandom(0.01,0.2); //randomize horizontal scale a bit
		scale.y *= frandom(0.6,0.7); //randomize vertical scale a bit
		
		bSPRITEFLIP = random(0,1); //randomly set or not set SPRITEFLIP flag
	}
	States {
	Spawn:
	//flamethrower particle sprite, if it's too short for your tastes add "B" to the frame
	TNT1 A 0;
	NF4R A 1 BRIGHT;
		stop;
	}
}
