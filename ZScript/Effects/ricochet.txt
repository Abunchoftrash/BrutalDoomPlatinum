Class RicoChet : BDPActor
{
	Default
	{
		renderstyle "Add";
		alpha 1.0;
		+CLIENTSIDEONLY;
		+FORCEXYBILLBOARD;
		+THRUACTORS;
		+NOGRAVITY;
		//damagetype "Shrapnel"
		Scale 0.6;
		Speed 0;
		Radius 0;
		Height 10;
  }
  states
  {
  Spawn:
    TNT1 A 0;
    TNT1 A 0 A_CheckFloor("SpawnFloor");
	TNT1 A 0 A_CheckCeiling("SpawnCeiling");
	ContinueSpawn:
	TNT1 A 0
	{
		//console.printf("%i",angle);
		string RicochetWall;
		FLineTraceData walltex;
        LineTrace(angle + 180, 8, 0, TRF_THRUACTORS, offsetz: 0, data: walltex);
        if (walltex.hittexture)
        {
			RicochetWall = TexMan.GetName(walltex.hittexture);
			console.printf(RicochetWall);
		}
		if (BDPDirtTexture.Find(RicochetWall) != BDPDirtTexture.Size())
		{
			Return resolvestate("spawnDirtWall");
		}
		Else if (BDPWater.Find(RicochetWall) != BDPWater.Size())
		{
			Return resolvestate("spawnWater");
		}
		Else if (BDPLava.Find(RicochetWall) != BDPLava.Size())
		{
			Return resolvestate("spawnLava");
		}
		Else if (BDPNukage.Find(RicochetWall) != BDPNukage.Size())
		{
			Return resolvestate("spawnNukage");
		}
		Else if (BDPSlime.Find(RicochetWall) != BDPSlime.Size())
		{
			Return resolvestate("spawnSlime");
		}
		Else if (BDPBlood.Find(RicochetWall) != BDPBlood.Size())
		{
			Return resolvestate("spawnBlood");
		}
		Else if (BDPMetal.Find(RicochetWall) != BDPMetal.Size())
		{
			Return resolvestate("spawnMetal");
		}
		Else if (BDPMetalGreen.Find(RicochetWall) != BDPMetalGreen.Size())
		{
			Return resolvestate("spawnMetalGreen");
		}
		Else if (BDPMetalBrown.Find(RicochetWall) != BDPMetalBrown.Size())
		{
			Return resolvestate("spawnMetalBrown");
		}
		Else if (BDPTech.Find(RicochetWall) != BDPTech.Size())
		{
			Return resolvestate("spawnTech");
		}
		Else if (BDPWood.Find(RicochetWall) != BDPWood.Size())
		{
			Return resolvestate("spawnWood");
		}
		Else if (BDPGoreTexture.Find(RicochetWall) != BDPGoreTexture.Size())
		{
			Return resolvestate("spawnGore");
		}
		Else
		{
			Return resolvestate(null);
		}
		
	}
	Spark:
	TNT1 A 0 A_CustomMissile("HitpuffSmoke", 2, 0, random (0, 360), 2, random (80, 90));
    TNT1 A 0 A_SpawnItemEX ("YellowFlareSmall");
	PUFF A 0 bright A_StartSound("ricochet/hit");
    
	
	TNT1 A 0 A_SpawnItemEX("YellowFlareSmall");
    TNT1 A 0 A_Jump (132, "Spawn2");
    FX58 ABCD 1 BRIGHT;
	
	FX58 EFGHIJ 1 bright;
    Stop;
	Spawn2:
    FX57 ABCD 1 BRIGHT;
	TNT1 A 0 A_CustomMissile("HitpuffSmoke", 2, 0, random (0, 360), 2, random (80, 90));
	FX57 EFGHIJ 1 bright;
    stop;
	
	
	SpawnFloor:
	TNT1 A 0;
	TNT1 A 0
	{
		string RicochetFloor;
		RicochetFloor = TexMan.GetName(floorpic);
		console.printf(RicochetFloor);
		if (BDPDirtTexture.Find(RicochetFloor) != BDPDirtTexture.Size())
		{
			Return resolvestate("spawnDirt");
		}
		Else if (BDPWater.Find(RicochetFloor) != BDPWater.Size())
		{
			Return resolvestate("spawnWater");
		}
		Else if (BDPLava.Find(RicochetFloor) != BDPLava.Size())
		{
			Return resolvestate("spawnLava");
		}
		Else if (BDPNukage.Find(RicochetFloor) != BDPNukage.Size())
		{
			Return resolvestate("spawnNukage");
		}
		Else if (BDPSlime.Find(RicochetFloor) != BDPSlime.Size())
		{
			Return resolvestate("spawnSlime");
		}
		Else if (BDPBlood.Find(RicochetFloor) != BDPBlood.Size())
		{
			Return resolvestate("spawnBlood");
		}
		Else if (BDPMetal.Find(RicochetFloor) != BDPMetal.Size())
		{
			Return resolvestate("spawnMetalFloor");
		}
		Else if (BDPMetalGreen.Find(RicochetFloor) != BDPMetalGreen.Size())
		{
			Return resolvestate("spawnMetalGreenFloor");
		}
		Else if (BDPMetalBrown.Find(RicochetFloor) != BDPMetalBrown.Size())
		{
			Return resolvestate("spawnMetalBrownFloor");
		}
		Else if (BDPTech.Find(RicochetFloor) != BDPTech.Size())
		{
			Return resolvestate("spawnTechFloor");
		}
		Else if (BDPWood.Find(RicochetFloor) != BDPWood.Size())
		{
			Return resolvestate("spawnWoodFloor");
		}
		Else if (BDPGoreTexture.Find(RicochetFloor) != BDPGoreTexture.Size())
		{
			Return resolvestate("spawnGoreFloor");
		}
		Else
		{
			Return resolvestate(null);
		}
		
	}
	TNT1 A 0;
	SparkFloor:
	PUFF A 0 bright A_StartSound("ricochet/hit");
	TNT1 A 0 A_SpawnItemEX("YellowFlareSmall");
	TNT1 A 0 A_SetScale(-0.6);
    TNT1 A 0 A_Jump (132, "spawnFloor2");
    FX58 ABCD 1 BRIGHT;
	TNT1 A 0 A_CustomMissile("HitpuffSmoke", 2, 0, random (0, 360), 2, random (80, 90));
	FX58 EFGHIJ 1 bright;
    Stop;
	SpawnFloor2:
    FX57 ABCD 1 BRIGHT;
	TNT1 A 0 A_CustomMissile("HitpuffSmoke", 2, 0, random (0, 360), 2, random (80, 90));
	FX57 EFGHIJ 1 bright;
    stop;
	
	SpawnCeiling:
	TNT1 A 0;
	TNT1 A 0
	{
		string RicochetCeiling;
		RicochetCeiling = TexMan.GetName(Ceilingpic);
		console.printf(RicochetCeiling);
		if (BDPDirtTexture.Find(RicochetCeiling) != BDPDirtTexture.Size())
		{
			Return resolvestate("spawnDirtCeiling");
		}
		Else if (BDPWater.Find(RicochetCeiling) != BDPWater.Size())
		{
			Return resolvestate("spawnWaterCeiling");
		}
		Else if (BDPLava.Find(RicochetCeiling) != BDPLava.Size())
		{
			Return resolvestate("spawnLavaCeiling");
		}
		Else if (BDPNukage.Find(RicochetCeiling) != BDPNukage.Size())
		{
			Return resolvestate("spawnNukageCeiling");
		}
		Else if (BDPSlime.Find(RicochetCeiling) != BDPSlime.Size())
		{
			Return resolvestate("spawnSlimeCeiling");
		}
		Else if (BDPBlood.Find(RicochetCeiling) != BDPBlood.Size())
		{
			Return resolvestate("spawnBloodCeiling");
		}
		Else if (BDPMetal.Find(RicochetCeiling) != BDPMetal.Size())
		{
			Return resolvestate("spawnMetalCeiling");
		}
		Else if (BDPMetalGreen.Find(RicochetCeiling) != BDPMetalGreen.Size())
		{
			Return resolvestate("spawnMetalGreenCeiling");
		}
		Else if (BDPMetalBrown.Find(RicochetCeiling) != BDPMetalBrown.Size())
		{
			Return resolvestate("spawnMetalBrownCeiling");
		}
		Else if (BDPTech.Find(RicochetCeiling) != BDPTech.Size())
		{
			Return resolvestate("spawnTechCeiling");
		}
		Else if (BDPWood.Find(RicochetCeiling) != BDPWood.Size())
		{
			Return resolvestate("spawnWoodCeiling");
		}
		Else if (BDPGoreTexture.Find(RicochetCeiling) != BDPGoreTexture.Size())
		{
			Return resolvestate("spawnGoreCeiling");
		}
		Else
		{
			Return resolvestate(null);
		}
		
	}
	TNT1 A 0;
	SparkCeiling:
	PUFF A 0 bright A_StartSound("ricochet/hit");
	TNT1 A 0 A_SpawnItemEX("YellowFlareSmall");
	TNT1 A 0 A_SetScale(-0.6);
    TNT1 A 0 A_Jump (132, "spawnCeiling2");
    FX58 ABCD 1 BRIGHT;
	TNT1 A 0 A_CustomMissile("HitpuffSmoke", 2, 0, random (0, 360), 2, random (80, 90));
	FX58 EFGHIJ 1 bright;
    Stop;
	SpawnCeiling2:
    FX57 ABCD 1 BRIGHT;
	TNT1 A 0 A_CustomMissile("HitpuffSmoke", 2, 0, random (0, 360), 2, random (80, 90));
	FX57 EFGHIJ 1 bright;
    stop;
	
	SpawnWater:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("WaterParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160));
	TNT1 AAAAA 0 A_CustomMissile ("WaterParticleXSuperFast", 24, 0, random (0, 360), 2, random (30, 160));
	TNT1 A 0 A_SpawnItemEX("WaterSplashWaves");
	TNT1 A 0 A_SetScale(0.5, 0.5);
	TNT1 AAA 0 A_CustomMissile ("WaterRicochet", random (0, 2), 0, random (0, 360), 2, random (30, 90));
	Stop;
	
	SpawnWaterCeiling:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("WaterParticleXFAster", 8, 0, random (0, 360), 2, random (-30, -160));
	TNT1 AAAAA 0 A_CustomMissile ("WaterParticleXSuperFast", 24, 0, random (0, 360), 2, random (-30, -160));
	//TNT1 A 0 A_SpawnItemEX("WaterSplashWaves");
	TNT1 A 0 A_SetScale(0.5, 0.5);
	TNT1 AAA 0 A_CustomMissile ("WaterRicochet", random (0, 2), 0, random (0, 360), 2, random (-30, -90));
	Stop;
	
	SpawnSlime:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("SLimeParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160));
	TNT1 AAAAA 0 A_CustomMissile ("SlimeParticleXFAster", 24, 0, random (0, 360), 2, random (30, 160));
	TNT1 A 0 A_SpawnItemEX("SlimeSplashWaves");
	TNT1 A 0 A_SetScale(0.5, 0.5);
	SPHB ABCDE 3;
	Stop;
	
	SpawnSlimeCeiling:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("SLimeParticleXFAster", 8, 0, random (0, 360), 2, random (-30, -160));
	TNT1 AAAAA 0 A_CustomMissile ("SlimeParticleXFAster", 24, 0, random (0, 360), 2, random (-30, -160));
	//TNT1 A 0 A_SpawnItemEX("SlimeSplashWaves");
	TNT1 A 0 A_SetScale(0.5, 0.5);
	SPHB ABCDE 3;
	Stop;
	
	
	SpawnNukage:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("nukageParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160));
	TNT1 AAAAA 0 A_CustomMissile ("nukageParticleXFAster", 24, 0, random (0, 360), 2, random (30, 160));
	TNT1 A 0 A_SpawnItemEX("NukageSplashWaves");
	TNT1 AAA 0 A_CustomMissile ("NukageRicochet", random (0, 2), 0, random (0, 360), 2, random (30, 90));
	Stop;
	
	SpawnNukageCeiling:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("nukageParticleXFAster", 8, 0, random (0, 360), 2, random (-30, -160));
	TNT1 AAAAA 0 A_CustomMissile ("nukageParticleXFAster", 24, 0, random (0, 360), 2, random (-30, -160));
	//TNT1 A 0 A_SpawnItemEX("NukageSplashWaves");
	TNT1 AAA 0 A_CustomMissile ("NukageRicochet", random (0, 2), 0, random (0, 360), 2, random (-30, -90));
	Stop;
	
	SpawnBlood:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("BloodParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160));
	TNT1 AAAAA 0 A_CustomMissile ("BloodParticleXFAster", 24, 0, random (0, 360), 2, random (30, 160));
	TNT1 A 0 A_SpawnItemEX("BloodSplashWaves");
	//TNT1 AAA 0 A_CustomMissile ("lavaRicochet", random (0, 2), 0, random (0, 360), 2, random (30, 90))
	Stop;
	
	SpawnBloodCeiling:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("BloodParticleXFAster", 8, 0, random (0, 360), 2, random (-30, -160));
	TNT1 AAAAA 0 A_CustomMissile ("BloodParticleXFAster", 24, 0, random (0, 360), 2, random (-30, -160));
	//TNT1 A 0 A_SpawnItemEX("BloodSplashWaves");
	//TNT1 AAA 0 A_CustomMissile ("lavaRicochet", random (0, 2), 0, random (0, 360), 2, random (30, 90))
	Stop;
	
	SpawnLava:
	TNT1 A 0;
	TNT1 A 0 A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 12, 0, random (160, 210), 2, random (10, 90));
	TNT1 A 0 A_SpawnItemEx("TinyBurningPiece3", random (-5, 5), random (-5, 5));
	TNT1 AAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 10, 0, random (0, 180), 2, random (10, 90));
	TNT1 A 0 A_SetScale(0.5, 0.5);
	INFE ABCDEFGHIJKLMNOPQR 1 BRIGHT;
	INFE ST 1 BRIGHT A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 32, 0, random (160, 210), 2, random (10, 90));
	TNT1 AAA 4 A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 14, 0, random (160, 210), 2, random (10, 90));
	Stop;
	
	SpawnLavaCeiling:
	TNT1 A 0;
	TNT1 A 0 A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 12, 0, random (160, 210), 2, random (-10, -90));
	TNT1 A 0 A_SpawnItemEx("TinyBurningPiece3", random (-5, 5), random (-5, 5));
	TNT1 AAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 10, 0, random (0, 180), 2, random (-10, -90));
	TNT1 A 0 A_SetScale(0.5, 0.5);
	INFE ABCDEFGHIJKLMNOPQR 1 BRIGHT;
	INFE ST 1 BRIGHT A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 32, 0, random (160, 210), 2, random (-10, -90));
	TNT1 AAA 4 A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 14, 0, random (160, 210), 2, random (-10, -90));
	Stop;
	
	
	SpawnDirt:
	TNT1 A 0;
	TNT1 A 0 A_CustomMissile ("BrownCloudSmallLong", 0, 0, random (0, 360), 2, random (10, 150));
	TNT1 AAA 0 A_CustomMissile ("DirtRicochet", random (0, 2), 0, random (0, 360), 2, random (30, 90));
	Stop;
	
	SpawnDirtCeiling:
	TNT1 A 0;
	TNT1 A 0 A_CustomMissile ("BrownCloudSmallLong", 0, 0, random (0, 360), 2, random (-10, -150));
	TNT1 AAA 0 A_CustomMissile ("DirtRicochet", random (0, 2), 0, random (0, 360), 2, random (-30, -90));
	Stop;
	
	SpawnDirtWall:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("BrownCloudSmallLong", 0, 0, random (-90,90 ), CMF_AIMDIRECTION, random (-70, 20));
	TNT1 AAA 0 A_SpawnProjectile ("DirtRicochet", 0, 0, random (-90,90 ), CMF_AIMDIRECTION, random (-70, 20));
	//TNT1 AAA 0 A_CustomMissile ("blueplasmaparticle", 0, 0, random (-90,90 ), CMF_AIMDIRECTION, random (-70, 70));
	Stop;
	
	
	SpawnSand:
	TNT1 A 0;
	TNT1 A 0 A_CustomMissile ("SandCloudSmallLong", 0, 0, random (0, 360), 2, random (10, 90));
	TNT1 A 0 A_CustomMissile ("SandCloudSmall", 0, 0, random (0, 360), 2, random (10, 90));
	TNT1 A 0 A_CustomMissile ("SandDustSmall", 4, 0, random (0, 360), 2, random (30, 150));
	TNT1 AAA 0 A_CustomMissile ("DirtRicochet", random (0, 2), 0, random (0, 360), 2, random (30, 90));
	Stop;
	
	SpawnTech:
	TNT1 A 0 A_startsound("Sparks/Spawn",7);
	SpawnTechSparks:
	TNT1 A 0 A_SpawnProjectile ("Spark_Debris", 0, 0, random (-25,25 ), CMF_AIMDIRECTION, random (-25, 25));
	TNT1 A 0 A_jump(75,"spawnMetal");
	Loop;
	
	SpawnTechFloor:
	TNT1 A 0 A_startsound("Sparks/Spawn",7);
	SpawnTechSparksFloor:
	TNT1 A 0 A_SpawnProjectile ("Spark_Debris", 0, 0, random (0,360), CMF_AIMDIRECTION, random (-50, -90));
	TNT1 A 0 A_jump(75,"spawnMetalFloor");
	Loop;
	
	SpawnTechCeiling:
	TNT1 A 0 A_startsound("Sparks/Spawn",7);
	SpawnTechSparksCeiling:
	TNT1 A 0 A_SpawnProjectile ("Spark_Debris", 5, 0, random (0,360), CMF_AIMDIRECTION, random (2, 50));
	TNT1 A 0 A_jump(75,"spawnMetalCeiling");
	Loop;
	
	SpawnMetal:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("WallDebris", 0, 0, random (-25,25 ), CMF_AIMDIRECTION, random (-25, 25));
	TNT1 A 0 A_jump(128,"spark");
	Loop;
	
	SpawnMetalFloor:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("WallDebris", 0, 0, random (0,360), CMF_AIMDIRECTION, random (-50, -90));
	TNT1 A 0 A_jump(128,"sparkFloor");
	Loop;
	
	SpawnMetalCeiling:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("WallDebris", 5, 0, random (0,360), CMF_AIMDIRECTION, random (50, 90));
	TNT1 A 0 A_jump(128,"sparkCeiling");
	Loop;
	
	SpawnMetalGreen:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("WallDebrisGreen", 0, 0, random (-25,25 ), CMF_AIMDIRECTION, random (-25, 25));
	TNT1 A 0 A_jump(128,"spark");
	Loop;
	
	SpawnMetalGreenFloor:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("WallDebrisGreen", 0, 0, random (0,360), CMF_AIMDIRECTION, random (-50, -90));
	TNT1 A 0 A_jump(128,"sparkFloor");
	Loop;
	
	SpawnMetalGreenCeiling:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("WallDebrisGreen", 0, 0, random (0,360), CMF_AIMDIRECTION, random (50, 90));
	TNT1 A 0 A_jump(128,"sparkCeiling");
	Loop;
	
	SpawnMetalBrown:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("WallDebrisBrown", 0, 0, random (-25,25 ), CMF_AIMDIRECTION, random (-25, 25));
	TNT1 A 0 A_jump(128,"spark");
	Loop;
	
	SpawnMetalBrownFloor:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("WallDebrisBrown", 0, 0, random (0,360), CMF_AIMDIRECTION, random (-50, -90));
	TNT1 A 0 A_jump(128,"sparkFloor");
	Loop;
	
	SpawnMetalBrownCeiling:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("WallDebrisBrown", 0, 0, random (0,360), CMF_AIMDIRECTION, random (50, 90));
	TNT1 A 0 A_jump(128,"sparkCeiling");
	Loop;
	
	SpawnWood:
	TNT1 A 0 A_startsound("wooddebris", VOLUME:0.7);
	TNT1 A 0 A_SpawnProjectile ("BrownCloudSmall", 0, 0, random (-90,90 ), CMF_AIMDIRECTION, random (-70, 20));
	Spawnwood2:
	TNT1 A 0 A_SpawnProjectile ("WoodDebris", 0, 0, random (-25,25 ), CMF_AIMDIRECTION, random (-25, 25));
	TNT1 A 0 A_jump(200,"spawnwood2");
	TNT1 A 20;
	Stop;
	
	SpawnWoodFloor:
	TNT1 A 0 A_startsound("wooddebris", VOLUME:0.7);
	TNT1 A 0 A_SpawnProjectile ("BrownCloudSmall", 0, 0, random (0,360), CMF_AIMDIRECTION, random (-50, -90));
	Spawnwood2Floor:
	TNT1 A 0 A_SpawnProjectile ("WoodDebris", 0, 0, random (0,360), CMF_AIMDIRECTION, random (-50, -90));
	TNT1 A 0 A_jump(200,"spawnwood2Floor");
	TNT1 A 20;
	Stop;
	
	SpawnWoodCeiling:
	TNT1 A 0 A_startsound("wooddebris", VOLUME:0.7);
	TNT1 A 0 A_SpawnProjectile ("BrownCloudSmall", 0, 0, random (0,360), CMF_AIMDIRECTION, random (50, 90));
	Spawnwood2Ceiling:
	TNT1 A 0 A_SpawnProjectile ("WoodDebris", 0, 0, random (0,360), CMF_AIMDIRECTION, random (50, 90));
	TNT1 A 0 A_jump(200,"spawnwood2Ceiling");
	TNT1 A 20;
	Stop;
	
	SpawnGore:
	TNT1 A 0 A_jump(220,"spawnGore2");
	TNT1 A 0 A_SpawnProjectile ("XDeath2", 0, 0, random (-60,60 ), CMF_AIMDIRECTION, random (-70, 20));
	SpawnGore2:
	TNT1 A 0 A_SpawnProjectile ("BloodDebris", 0, 0, random (-90,90 ), CMF_AIMDIRECTION, random (-70, 20));
	TNT1 A 20;
	Stop;
	
	SpawnGoreFloor:
	TNT1 A 0 A_jump(220,"spawnGore2Floor");
	TNT1 A 0 A_SpawnProjectile ("XDeath2", 0, 0, random (0,360), CMF_AIMDIRECTION, random (-50, -90));
	SpawnGore2Floor:
	TNT1 A 0 A_SpawnProjectile ("BloodDebris", 0, 0, random (0,360), CMF_AIMDIRECTION, random (-50, -90));
	TNT1 A 20;
	Stop;
	
	SpawnGoreCeiling:
	TNT1 A 0 A_jump(220,"spawnGore2Ceiling");
	TNT1 A 0 A_SpawnProjectile ("XDeath2", 0, 0, random (0,360), CMF_AIMDIRECTION, random (50, 90));
	SpawnGore2Ceiling:
	TNT1 A 0 A_SpawnProjectile ("BloodDebris", 0, 0, random (0,360), CMF_AIMDIRECTION, random (50, 90));
	TNT1 A 20;
	Stop;
	
	
  }
}

Class Spark_Debris : Actor
{
	Default
	{
	height 1;
	radius 1;
	mass 0;
	speed 3;
	+CLIENTSIDEONLY;
	+MISSILE +NOBLOCKMAP +DOOMBOUNCE;
	bouncefactor 0.3;
	renderstyle "Add";
	scale 0.03;
	Gravity 0.6;
  }
  
  Override void beginplay()
  {
	Speed = frandom(4,20);
	float potentialscale = frandom(0.01,0.07);
	A_setscale(potentialscale,potentialscale);
	Super.beginplay();
  }
  states
  {
  Spawn:
    SPRK A 1 bright;
    loop;
  Death:
    SPRK A 1 bright A_FadeOut (0.1);
    loop;


  }
}

Class walldebris : Actor
{
	Default
	{
		Scale 0.50;
		Height 1;
		Radius 1;
		+noblockmap;
		bouncefactor 0.20;
		+rollsprite;
		+rollcenter;
		Gravity 0.60;
		+thruactors;
		+MOVEWITHSECTOR;
		+noteleport;
		+forcexybillboard;
		speed 10;
	}
	float rollfactor;
	States
	{
	Spawn:
	ContinueSpawn:
		TNT1 A 0 NODELAY
		{
			rollfactor = frandom(-25,25);
			If(random(1,0) == 1)
			{
				bxflip = true;
			}
		}
		TNT1 A 0 A_JUMP(255,"Spawn1","Spawn2","Spawn3","Spawn4","Spawn5","Spawn6","Spawn7","Spawn8","Spawn9","Spawn10","Spawn11","Spawn12");
	Spawn1:
		WCHN A 0;
		Goto StaySpawned;
	Spawn2:
		WCHN B 0;
		Goto StaySpawned;
	Spawn3:
		WCHN C 0;
		Goto StaySpawned;
	Spawn4:
		WCHN D 0;
		Goto StaySpawned;
	Spawn5:
		WCHN E 0;
		Goto StaySpawned;
	Spawn6:
		WCHN F 0;
		Goto StaySpawned;
	StaySpawned:
		WCHN "#" 1 
		{
			Roll = roll + rollfactor;
		}
		TNT1 "#" 0 A_JumpIf(pos.Z <= floorz, "Floor");
		LOOP;
	Floor:
		TNT1 "#" 0 A_Stop();
		WCHN "#" random(1,65);
	Fadeout:
		WCHN "#" 1 A_FADEOUT(0.1);
		LOOP;
		
	}

}

Class wooddebris : Actor
{
	Default
	{
		Scale 0.50;
		Height 1;
		Radius 1;
		+noblockmap;
		bouncefactor 0.20;
		+rollsprite;
		+rollcenter;
		Gravity 0.60;
		+thruactors;
		+MOVEWITHSECTOR;
		+noteleport;
		+forcexybillboard;
		speed 15;
		+MISSILE +NOBLOCKMAP +DOOMBOUNCE;
		bouncefactor 0.3;
	}
	float rollfactor;
	States
	{
	Spawn:
	ContinueSpawn:
		TNT1 A 0 NODELAY
		{
			rollfactor = frandom(-25,25);
			roll = frandom(0,360);
			If(random(1,0) == 1)
			{
				bxflip = true;
			}
			float potentialscale = frandom(0.05,1.10);
			A_setscale(potentialscale,potentialscale);
		}
	StaySpawned:
		WOOD "B" 1 
		{
			Roll = roll + rollfactor;
		}
		//TNT1 "#" 0 A_JumpIf(pos.Z <= floorz, "Floor");
		LOOP;
	Death:
		TNT1 "#" 0 A_Stop();
		WOOD "#" random(1,65);
	Fadeout:
		WOOD "#" 1 A_FADEOUT(0.1);
		LOOP;
		
	}

}


CLASS walldebris2 : walldebris
{
	Default
	{
		Mass 500;
	
	}
	States
	{
		Spawn:
			TNT1 A 0 NODELAY
			{
				vel.x = frandom(-0.3,0.3);
				vel.y = frandom(-0.3,0.3);
			}
		Goto ContinueSpawn;
		
		
		
	
	}



}

Class WalldebrisGreen : WallDebris
{
	Default
	{
		translation "80:111=122:127";
	
	}

}

Class WalldebrisBrown : WallDebris
{
	Default
	{
		translation "80:111=144:151";
	
	}

}

Class BloodDebris : Actor
{
	Default
	{
	scale 0.5;
   speed 4;
   radius 1;
   height 1;
   Gravity 0.6;
   Renderstyle "Translucent";
   Alpha 0.9;
   Decal "BrutalBlood";
   Mass 1;
   +MISSILE;   
   +NOTELEPORT;
   +NOBLOCKMAP;  
   +FORCEXYBILLBOARD;
   +MOVEWITHSECTOR;   
   +DONTSPLASH;
   }
   Override void beginplay()
   {
	Speed = frandom(4,7);
	float potentialscale = frandom(0.1,0.7);
	A_setscale(potentialscale,potentialscale);
	Super.beginplay();
  }
    States
    {
     Spawn:
	 Live:
			BSPR ABCDEFGH 2;
			BSPR I 100 A_JumpIf(waterlevel > 1, "Splash");
			Stop;	
	
	Splash:
			BLOD A 0;
			TNT1 A 0 A_SpawnItemEX("Underblood2");
			stop;
		
     Death:
			TNT1 A 0;
			TNT1 A 0 A_StartSound("blooddrop2");
			TNT1 A 0 A_CheckFloor("DeathFloor");
			TNT1 A 1;
			Stop;
  
		DeathFloor:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItemEx ("Brutal_BloodSpot",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION |  SXF_TRANSFERTRANSLATION,0);
			TNT1 A 0 A_StartSound("blooddrop2");
		    XDT1 EFGHIJKL 2;
			Stop;
			
		NoSpawn:
			TNT1 A 0;
			Stop;
			
    }
}

