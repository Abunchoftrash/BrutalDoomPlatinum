Class RicoChet : BDPActor
{
	Default
	{
		renderstyle "Add";
		alpha 1.0;
		+CLIENTSIDEONLY;
		+FORCEXYBILLBOARD;
		+THRUACTORS;
		+NOGRAVITY;
		//damagetype "Shrapnel"
		Scale 0.6;
		Speed 0;
		Radius 0;
		Height 1;
  }
  states
  {
  Spawn:
    TNT1 A 0;
    TNT1 A 0 A_CheckFloor("SpawnFloor");
	ContinueSpawn:
	TNT1 A 0
	{
		//console.printf("%i",angle);
		string RicochetWall;
		FLineTraceData walltex;
        LineTrace(angle + 180, 8, 0, TRF_THRUACTORS, offsetz: 0, data: walltex);
        if (walltex.hittexture)
        {
			RicochetWall = TexMan.GetName(walltex.hittexture);
			//console.printf(RicochetWall);
		}
		if (BDPDirtTexture.Find(RicochetWall) != BDPDirtTexture.Size())
		{
			Return resolvestate("spawnDirtWall");
		}
		Else if (BDPWater.Find(RicochetWall) != BDPWater.Size())
		{
			Return resolvestate("spawnWater");
		}
		Else if (BDPLava.Find(RicochetWall) != BDPLava.Size())
		{
			Return resolvestate("spawnLava");
		}
		Else if (BDPNukage.Find(RicochetWall) != BDPNukage.Size())
		{
			Return resolvestate("spawnNukage");
		}
		Else if (BDPSlime.Find(RicochetWall) != BDPSlime.Size())
		{
			Return resolvestate("spawnSlime");
		}
		Else if (BDPBlood.Find(RicochetWall) != BDPBlood.Size())
		{
			Return resolvestate("spawnBlood");
		}
		Else if (BDPMetal.Find(RicochetWall) != BDPMetal.Size())
		{
			Return resolvestate("spawnMetal");
		}
		Else if (BDPTech.Find(RicochetWall) != BDPTech.Size())
		{
			Return resolvestate("spawnTech");
		}
		Else
		{
			Return resolvestate(null);
		}
		
	}
	Spark:
	TNT1 A 0 A_CustomMissile("HitpuffSmoke", 2, 0, random (0, 360), 2, random (80, 90));
    TNT1 A 0 A_SpawnItemEX ("YellowFlareSmall");
	PUFF A 0 bright A_StartSound("ricochet/hit");
    
	
	TNT1 A 0 A_SpawnItemEX("YellowFlareSmall");
    TNT1 A 0 A_Jump (132, "Spawn2");
    FX58 ABCD 1 BRIGHT;
	
	FX58 EFGHIJ 1 bright;
    Stop;
	Spawn2:
    FX57 ABCD 1 BRIGHT;
	TNT1 A 0 A_CustomMissile("HitpuffSmoke", 2, 0, random (0, 360), 2, random (80, 90));
	FX57 EFGHIJ 1 bright;
    stop;
	
	
	SpawnFloor:
	TNT1 A 0;
	TNT1 A 0
	{
		string RicochetFloor;
		RicochetFloor = TexMan.GetName(floorpic);
		//console.printf(RicochetFloor);
		if (BDPDirtTexture.Find(RicochetFloor) != BDPDirtTexture.Size())
		{
			Return resolvestate("spawnDirt");
		}
		Else if (BDPWater.Find(RicochetFloor) != BDPWater.Size())
		{
			Return resolvestate("spawnWater");
		}
		Else if (BDPLava.Find(RicochetFloor) != BDPLava.Size())
		{
			Return resolvestate("spawnLava");
		}
		Else if (BDPNukage.Find(RicochetFloor) != BDPNukage.Size())
		{
			Return resolvestate("spawnNukage");
		}
		Else if (BDPSlime.Find(RicochetFloor) != BDPSlime.Size())
		{
			Return resolvestate("spawnSlime");
		}
		Else if (BDPBlood.Find(RicochetFloor) != BDPBlood.Size())
		{
			Return resolvestate("spawnBlood");
		}
		Else
		{
			Return resolvestate(null);
		}
		
	}
	PUFF A 0 bright A_StartSound("ricochet/hit");
	TNT1 A 0 A_SpawnItemEX("YellowFlareSmall");
	TNT1 A 0 A_SetScale(-0.6);
    TNT1 A 0 A_Jump (132, "spawnFloor2");
    FX58 ABCD 1 BRIGHT;
	TNT1 A 0 A_CustomMissile("HitpuffSmoke", 2, 0, random (0, 360), 2, random (80, 90));
	FX58 EFGHIJ 1 bright;
    Stop;
	SpawnFloor2:
    FX57 ABCD 1 BRIGHT;
	TNT1 A 0 A_CustomMissile("HitpuffSmoke", 2, 0, random (0, 360), 2, random (80, 90));
	FX57 EFGHIJ 1 bright;
    stop;
	
	SpawnWater:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("WaterParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160));
	TNT1 AAAAA 0 A_CustomMissile ("WaterParticleXSuperFast", 24, 0, random (0, 360), 2, random (30, 160));
	TNT1 A 0 A_SpawnItemEX("WaterSplashWaves");
	TNT1 A 0 A_SetScale(0.5, 0.5);
	TNT1 AAA 0 A_CustomMissile ("WaterRicochet", random (0, 2), 0, random (0, 360), 2, random (30, 90));
	Stop;
	
	SpawnSlime:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("SLimeParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160));
	TNT1 AAAAA 0 A_CustomMissile ("SlimeParticleXFAster", 24, 0, random (0, 360), 2, random (30, 160));
	TNT1 A 0 A_SpawnItemEX("SlimeSplashWaves");
	TNT1 A 0 A_SetScale(0.5, 0.5);
	SPHB ABCDE 3;
	Stop;
	
	
	SpawnNukage:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("nukageParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160));
	TNT1 AAAAA 0 A_CustomMissile ("nukageParticleXFAster", 24, 0, random (0, 360), 2, random (30, 160));
	TNT1 A 0 A_SpawnItemEX("NukageSplashWaves");
	TNT1 AAA 0 A_CustomMissile ("NukageRicochet", random (0, 2), 0, random (0, 360), 2, random (30, 90));
	Stop;
	
	SpawnBlood:
	TNT1 A 0;
	TNT1 AAAAA 0 A_CustomMissile ("BloodParticleXFAster", 8, 0, random (0, 360), 2, random (30, 160));
	TNT1 AAAAA 0 A_CustomMissile ("BloodParticleXFAster", 24, 0, random (0, 360), 2, random (30, 160));
	TNT1 A 0 A_SpawnItemEX("BloodSplashWaves");
	//TNT1 AAA 0 A_CustomMissile ("lavaRicochet", random (0, 2), 0, random (0, 360), 2, random (30, 90))
	Stop;
	
	SpawnLava:
	TNT1 A 0;
	TNT1 A 0 A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 12, 0, random (160, 210), 2, random (10, 90));
	TNT1 A 0 A_SpawnItemEx("TinyBurningPiece3", random (-5, 5), random (-5, 5));
	TNT1 AAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 10, 0, random (0, 180), 2, random (10, 90));
	TNT1 A 0 A_SetScale(0.5, 0.5);
	INFE ABCDEFGHIJKLMNOPQR 1 BRIGHT;
	INFE ST 1 BRIGHT A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 32, 0, random (160, 210), 2, random (10, 90));
	TNT1 AAA 4 A_CustomMissile ("OldschoolRocketSmokeTrailDarker", 14, 0, random (160, 210), 2, random (10, 90));
	Stop;
	
	
	SpawnDirt:
	TNT1 A 0;
	TNT1 A 0 A_CustomMissile ("BrownCloudSmallLong", 0, 0, random (0, 360), 2, random (10, 150));
	TNT1 AAA 0 A_CustomMissile ("DirtRicochet", random (0, 2), 0, random (0, 360), 2, random (30, 90));
	Stop;
	
	SpawnDirtWall:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("BrownCloudSmallLong", 0, 0, random (-90,90 ), CMF_AIMDIRECTION, random (-70, 20));
	TNT1 AAA 0 A_SpawnProjectile ("DirtRicochet", 0, 0, random (-90,90 ), CMF_AIMDIRECTION, random (-70, 20));
	//TNT1 AAA 0 A_CustomMissile ("blueplasmaparticle", 0, 0, random (-90,90 ), CMF_AIMDIRECTION, random (-70, 70));
	Stop;
	
	
	SpawnSand:
	TNT1 A 0;
	TNT1 A 0 A_CustomMissile ("SandCloudSmallLong", 0, 0, random (0, 360), 2, random (10, 90));
	TNT1 A 0 A_CustomMissile ("SandCloudSmall", 0, 0, random (0, 360), 2, random (10, 90));
	TNT1 A 0 A_CustomMissile ("SandDustSmall", 4, 0, random (0, 360), 2, random (30, 150));
	TNT1 AAA 0 A_CustomMissile ("DirtRicochet", random (0, 2), 0, random (0, 360), 2, random (30, 90));
	Stop;
	
	SpawnTech:
	TNT1 A 0 A_startsound("Sparks/Spawn",7);
	SpawnTechSparks:
	TNT1 A 0 A_SpawnProjectile ("Spark_Debris", 0, 0, random (-25,25 ), CMF_AIMDIRECTION, random (-25, 25));
	TNT1 A 0 A_jump(75,"spawnMetal");
	Loop;
	
	SpawnMetal:
	TNT1 A 0;
	TNT1 A 0 A_SpawnProjectile ("WallDebris3", 0, 0, random (-25,25 ), CMF_AIMDIRECTION, random (-25, 25));
	TNT1 A 0 A_jump(128,"spark");
	Loop;
	
	
	
	
	
	
  }
}

Class Spark_Debris : Actor
{
	Default
	{
	height 1;
	radius 1;
	mass 0;
	speed 3;
	+CLIENTSIDEONLY;
	+MISSILE +NOBLOCKMAP +DOOMBOUNCE;
	bouncefactor 0.3;
	renderstyle "Add";
	scale 0.03;
	Gravity 0.6;
  }
  
  Override void beginplay()
  {
	Speed = frandom(4,20);
	float potentialscale = frandom(0.01,0.07);
	A_setscale(potentialscale,potentialscale);
	Super.beginplay();
  }
  states
  {
  Spawn:
    SPRK A 1 bright;
    loop;
  Death:
    SPRK A 1 bright A_FadeOut (0.1);
    loop;


  }
}